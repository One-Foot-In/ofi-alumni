{"version":3,"sources":["components/logo.png","components/Header.js","components/CardImage.js","components/CardDetails.js","components/TimezoneAdjustmentHelpers.js","components/PreferredTimeSelector.js","components/SignUp/SignUpMentor.js","topics.js","components/EditProfile.js","components/PreferredTimesEditor.js","components/MenteeView/Tracking.js","components/Profile.js","inlineStyles.js","htmlColorCodes.js","components/Feed/FeedChat.js","magicString.js","components/ScheduleCard.js","components/MenteeView/ProfileModal.js","components/MentorView/CallCard.js","components/MentorView/Backlog.js","components/SearchBar.js","components/MentorNetworkCard.js","components/MentorNetwork.js","components/MentorView/NavBarMentor.js","components/Schedule.js","components/TimeSelector.js","components/ScheduleForm.js","components/ScheduleFormMentorPicked.js","components/NavBarMentee.js","components/AdminView/MenteeCard.js","components/AdminView/Mentees.js","components/AdminView/RequestCard.js","components/AdminView/Requests.js","components/AdminView/SchoolRequestCard.js","components/AdminView/SchoolRequests.js","components/AdminView/MentorCard.js","components/AdminView/Mentors.js","components/AdminView/Dashboard.js","components/AdminView/NavBarAdmin.js","components/SchoolView/Students.js","components/SchoolView/SchoolRequestCard.js","components/SchoolView/SchoolRequests.js","components/SchoolView/MentorSchoolCard.js","components/SchoolView/SchoolMentors.js","components/SchoolView/SchoolDashboard.js","components/SchoolView/NavBarSchoolAdmin.js","components/LoginForm.js","components/SignUp/SignUpMentee.js","components/SignUp/SignUpAdmin.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loggedIn","componentCleanup","bind","assertThisInitialized","sessionStorage","setItem","JSON","stringify","window","addEventListener","persistState","getItem","setState","parse","e","console","log","removeEventListener","react_default","a","createElement","Grid","Column","width","style","padding-top","Button","class","onClick","logout","src","require","alt","columns","renderLogo","renderLoginStateInfo","Component","ImageCard","_this$props","name","image","Card","Image","height","object-fit","Content","extra","Icon","React","CardDetails","renderAboutMe","getLanguages","calls_requested","calls_completed","_this2","isMentor","mentorIdForStats","payload","id","fetch","concat","BACKEND","method","headers","Content-Type","body","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","resolvedRes","status","wrap","_context","prev","next","sent","json","stop","_x","apply","arguments","Message","icon","header","content","aboutYourself","languages","length","slice","join","school","memberSince","Meta","position","Description","Row","Statistic","color","Value","Label","days","convertTo12h","time","hh","parseInt","mmString","meridian","moveDay","day","moveDayForward","dayInd","indexOf","adjustTimeForStorage","timeSlots","timezone","allTimesAdjusted","GMTOffset","substring","forEach","slot","parts","split","slotBegin","timezoneStripped24h","pm","hours","convertTo24hoursFromSlotBeginning","timesFromSlot","startTimeIn24h","slotsNum","allTimes","dayMoved","push","generateTimesfromStartOfSlot","map","timeSlot","_12hrTime","convertToViewerTimeZone","viewerGMT","adjustedTime","min","convertTo24hoursFromDatabaseTime","timeIn24h","replace","preferredTimesSlots","val","key","text","value","messageStyle","padding","margin","PreferredTimeSelector","sundayPreferredTimes","mondayPreferredTimes","tuesdayPreferredTimes","wednesdayPreferredTimes","thursdayPreferredTimes","fridayPreferredTimes","saturdayPreferredTimes","signUpDone","submitting","zoom_info","handleChangeSundayTime","handleChangeMondayTime","handleChangeTuesdayTime","handleChangeWednesdayTime","handleChangeThursdayTime","handleChangeFridayTime","handleChangeSaturdayTime","handleSubmit","handleChange","preventDefault","change","target","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","preferredTimes","toConsumableArray","swal","title","timesToStore","timeZone","assign","_ref8","catch","err","alert","_this3","react_router","to","Container","centered","Divider","back","elements_Header_Header","Dropdown","placeholder","fluid","multiple","selection","options","onChange","open","pointing","Input","type","loading","PREFERRED_TOPICS","preferredTopicsOptions","LANGUAGE_OPTIONS","languageOptions","fieldStyle","getTimezoneOffset","z","n","offset","Date","Math","abs","SignUpMentor","email","password","confirmPassword","college","major","location","preferredTopics","selectTimes","imageLink","handleChangeTopic","handleChangeLanguages","setPreferredTimes","formPayload","uploadImage","backToSignUp","file","files","data","FormData","append","axios","post","success","error","attached","PreferredTimeSelector_PreferredTimeSelector","react_router_dom","PATHS","root","Form","Field","required","maxLength","CUSTOM","EditProfile","schoolCustom","schoolSelected","customSchoolSelected","schools","handleMentorEditSubmit","handleMenteeEditSubmit","handleSchoolSelection","_callee2","_context2","goBack","Headers","credentials","_callee3","_context3","_x2","_this4","_callee5","_context5","_callee4","_context4","_x3","_this5","schoolOptions","mentorEditForm","onSubmit","disabled","menteeEditForm","PreferredTimeEditor","done","mentorEmail","REACH","MATCH","SAFETY","groupByRank","collegeObjs","sortedShortList","collegeObj","rank","Tracking","collegeShortlist","grade","OALevel","SAT","OtherExams","ECA","collegeName","activityOrAchievement","yearsOfCommit","positionOrDesc","removeCollege","addCollege","removeECA","addECA","updateTracking","getECA","getCollegesList","handleChangeCollegeRank","handleChangeGrade","modalOpen","trackingId","menteeId","_resolvedRes","OAlevel","ECAparsed","collegeShortlistParsed","newCollege","collegeShortlistNew","some","toLowerCase","newECA","ECAListNew","filter","eca","edit","undefined","block","List","Item","sortedShortlist","keys","Fragment","size","updateCollegesField","Segment","action","Select","compact","defaultValue","updateECAInfo","testAndBackgroundInfo","updateTrackingModal","Modal","trigger","Actions","viewMode","Profile","editMode","timeSelect","launchEditMode","launchTimeSelector","buttonCollection","mentorButtonCollection","profile","CardImage_ImageCard","goBackToMentorNetwork","CardDetails_CardDetails","Tracking_Tracking","PreferredTimesEditor_PreferredTimeEditor","EditProfile_EditProfile","adminRowPaddingStyle","adminContentYellowStyle","background","adminContentOrangeStyle","adminCardStyleYellow","messageChatFeed","overflow-y","max-height","menteeMessage","float","mentorMessage","buttonStyle3","FeedChat","getEvents","events","evt","event","Feed","Event","Summary","message","sender","role","MAX_CHARS_MESSAGE","process","REACT_APP_MAX_CHARS_MESSAGE","createMessageEvent","messages","msg","dateString","messageString","dateLen","date","ScheduleCard","provideFeedback","sendMessage","getMessageEvents","mentorMessages","menteeMessages","menteeName","mentee","mentorName","mentor","taggedMenteeMessages","taggedMentorMessages","allMessageEvents","sort","obj1","obj2","requestId","button","closeModal","feedback","mentee_feedback","reload","topic","buttonText","confirmed","requestDone","className","basic","meetingRoom","FeedChat_FeedChat","maxlength","MenteeModal","CSLparsed","wrapped","ui","CallCard","modalProfileViewOpen","handleConfirm","handleMarkAsComplete","handleDismiss","confirmPayload","mentorTimeZone","mentee_intro","ProfileModal_MenteeModal","Backlog","renderRequestCards","calls","CallCard_CallCard","dateTime","meta","desc","SearchBar","Search","onSearchChange","onSearchMode","searchValue","MentorNetworkCard","viewedAsMentor","hasTimesAvailable","pickMentor","viewProfile","MentorNetwork","mentors","searchMode","searchTerms","searchTopic","updateSearchTerms","clearSearch","mentorToLift","find","viewMentorProfile","searchObject","MentorObjects","bagOfWords","getBagofWords","i","includes","myId","approved","hasAvailabilities","MentorNetworkCard_MentorNetworkCard","SearchBar_SearchBar","renderUserCards","filterResults","MY_PROFILE","NavBarMentor","handleItemClick","activeItem","requests","getRequests","getConfirmedCalls","getBacklog","mentorFetchedForView","request","mentorId","Profile_Profile","Backlog_Backlog","MentorNetwork_MentorNetwork","handleNewScheduleWithMentor","Menu","active","renderNavSelection","Schedule","schedules","renderScheduleCards","abrupt","allSchedules","feedback_given","ScheduleCard_ScheduleCard","TimeSelector","timesOptions","timeSelection","handleChangeTime","times","topics","allTimeObjects","mentorsByTopic","menteeTimeZone","menteeAdjustedTimeSlot","flat","topicsOptions","ScheduleForm","selectedTopics","getMentorsByTopic","requestedTopics","TimeSelector_TimeSelector","ScheduleFormMentorPicked","topicSelection","topicOptions","timeOptions","handleChangeIntro","_","option","menteeTimeObjects","gmtFreeTime","viewTime","newRequestPayload","requestorId","Group","widths","rows","NavBarMentee","schedule","mentorPicked","mentorPickedForView","handleNewSchedule","tracking","Schedule_Schedule","getForm","menteeEmail","ScheduleFormMentorPicked_ScheduleFormMentorPicked","ScheduleForm_ScheduleForm","MenteeCard","suspensionStatus","changeSuspensionMentee","pingMentee","newStatus","newSuspensionStatus","callsRequested","Mentees","mentees","MenteeObjects","MenteeCard_MenteeCard","suspended","RequestCard","pingParticipants","menteeNameSchool","mentorNameCollege","menteeIntro","Requests","RequestObjects","RequestCard_RequestCard","SchoolRequestCard","mentorPairId","handleMentorPick","schoolName","paired","pairCall","SchoolRequests","moderatorRequests","SchoolRequestCard_SchoolRequestCard","MentorCard","approveMentor","pingMentor","callsCompleted","Mentors","MentorCard_MentorCard","Dashboard","schoolRegion","schoolContact","passwordTemp","addNewSchool","adminName","SchoolObjects","region","contactEmail","REQUESTS","NavBarAdmin","Requests_Requests","Mentors_Mentors","Mentees_Mentees","Dashboard_Dashboard","SchoolRequests_SchoolRequests","Students","students","modalMessageOpen","modalRequestOpen","topicSelectedForMentorship","pingStudent","requestMentorship","filterByGrade","handleTopicSelection","schoolId","studentId","student","Table","Cell","testsTaken","numCollegesInShortlist","hasEca","callRecords","celled","padded","HeaderCell","singleLine","Body","renderTableRows","SchoolView_SchoolRequestCard_SchoolRequestCard","MentorSchoolCard","SchoolMentors","MentorSchoolCard_MentorSchoolCard","SchoolDashboard","pingStudents","DASHBOARD","NavBarSchoolAdmin","admin","SchoolView_SchoolRequests_SchoolRequests","SchoolMentors_SchoolMentors","Students_Students","SchoolDashboard_SchoolDashboard","buttonStyle","LoginForm","incorrectCredentials","menteeLoginLoading","mentorLoginLoading","adminLoading","schoolAdminLoading","handleSubmitAsMentee","handleSubmitAsMentor","handleSubmitAsAdmin","handleSubmitAsSchoolAdmin","renderIncorrectCredentialsMessage","resolvedResParsed","login","liftPayload","adminLoginLoading","schoolAdminLoginLoading","_x4","SignUpMentee","readyForSubmit","SignUpAdmin","signupMentor","signupMentee","signupAdmin","App","mentorPayload","menteePayload","adminPayload","schoolAdminPayload","renderLogin","loggedInView","NavBarMentor_NavBarMentor","NavBarMentee_NavBarMentee","NavBarAdmin_NavBarAdmin","NavBarSchoolAdmin_NavBarSchoolAdmin","navigation","exact","path","render","left","LoginForm_LoginForm","SignUpMentor_SignUpMentor","SignUpMentee_SignUpMentee","SignUpAdmin_SignUpAdmin","Header_Header","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.49b57e4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4a6670bf.png\";","import React, { Component } from 'react';\nimport {Grid, Button} from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst compName = 'Header_LS';\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false,\n        }\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n    \n    renderLoginStateInfo() {\n        let loggedIn = this.props.loggedIn;\n        // let refLink = loggedIn ? '/logout' : '/login'\n        let style = {\n            'padding-top': '50px'\n        }\n        return (\n        <Grid.Column \n            width = {6}\n            style = {style}\n            >\n            <Button class=\"ui button\" onClick={this.props.logout}>{loggedIn ? 'Log Out' : 'Log In'}</Button>\n        </Grid.Column>)\n    }\n\n    renderLogo() {\n        // TODO: Fix broken logo render\n        return (\n            <img class=\"ui small image centered\" src={require(\"./logo.png\")} alt=\"logo\"/>\n        )\n    }\n    render () {\n        return (\n            <Grid columns={3}>\n                <Grid.Column width = {5}>\n                    <div></div>\n                </Grid.Column>\n                <Grid.Column width = {5}>\n                    {this.renderLogo()}\n                </Grid.Column>\n                {this.props.loggedIn ? this.renderLoginStateInfo(): null}\n            </Grid>\n        )\n    }\n}","import React from 'react'\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\nexport default class ImageCard extends React.Component {\n  render() {\n    const {name, image} = this.props;\n    let imageAspect = {\n      'height': '300px',\n      'object-fit': 'cover',\n    }\n    return (  \n    <Card>\n      <Image style={imageAspect} src={image} />\n      <Card.Content>\n        <Card.Header>{name}</Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n          <Icon name='user' />\n      </Card.Content>\n    </Card>\n    )\n  }\n}","import React from 'react'\nimport { Card, Message, Statistic, Grid } from 'semantic-ui-react'\nimport { BACKEND } from \"../App\";\n\nconst compName = 'CardDetails_LS';\n\n//TODO: allow form that lets mentors edit their time preferences\nexport default class CardDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderAboutMe = this.renderAboutMe.bind(this);\n        this.getLanguages = this.getLanguages.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.state = {\n            calls_requested: null,\n            calls_completed: null,\n        }\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n        // only read from cached state if on same mentor's profile\n        if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState));\n                // set state but overwrite with API call\n            } catch (e) {\n                console.log(\"Could not get fetch state from local storage for\", compName);\n            }\n        }\n        if (this.props.isMentor) {\n            if (this.props.mentorIdForStats) {\n                let payload = {\n                    id: this.props.mentorIdForStats\n                }\n                fetch(`${BACKEND}/getRequestRecordsMentor`, {\n                    method: 'post',\n                    headers: {'Content-Type':'application/json'},\n                    body: JSON.stringify(payload)\n                    }).then(async res => {\n                        let resolvedRes = await res;\n                        let status = resolvedRes.status;\n                        resolvedRes = await resolvedRes.json()\n                        if (status !== 200) {\n                        }\n                        else {\n                        this.setState({\n                            calls_completed: resolvedRes.calls_completed,\n                            calls_requested: resolvedRes.calls_requested,\n                        })\n                        }\n                    })\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.isMentor) {\n            this.componentCleanup();\n            window.removeEventListener('beforeunload', this.componentCleanup);\n        }\n    }\n\n    renderAboutMe() {\n        return (\n            <Message\n                icon='paper plane'\n                header={`About ${this.props.name}...`}\n                content={this.props.aboutYourself}\n            />\n        )\n    }\n\n    getLanguages(){\n        let languages = this.props.languages;\n        if (languages && languages.length > 1) {\n            return 'I speak ' + languages.slice(0,-1).join(', ') + ' and '+ languages.slice(-1);\n        } else {\n            return `I speak ${languages && languages[0]}`;\n        }\n    }\n\n    render() {\n        let {name, school, memberSince} = this.props;\n        return (\n            <div>\n                <Card>\n                    <Card.Content>\n                    <Card.Header>{name}</Card.Header>\n                    <Card.Meta>{school}</Card.Meta>\n                    {this.props.isMentor ? <Card.Meta>{this.props.position}</Card.Meta> : null}\n                    {this.props.isMentor ? <Card.Meta>{this.getLanguages()}</Card.Meta> : null}\n                    {this.renderAboutMe()}\n                    <Card.Description>{name} has been a member since {memberSince}.</Card.Description>\n                    </Card.Content>\n                    {this.props.isMentor? <Card.Content>\n                        <Grid.Row>\n                            <Grid.Column>\n                            <Statistic color='orange'>\n                                <Statistic.Value>{this.state.calls_completed}</Statistic.Value>\n                                <Statistic.Label>CALLS COMPLETED</Statistic.Label>\n                            </Statistic>\n                            </Grid.Column>\n                            <Grid.Column>\n                            <Statistic color='yellow'>\n                                <Statistic.Value>{this.state.calls_requested}</Statistic.Value>\n                                <Statistic.Label>CALLS REQUESTED</Statistic.Label>\n                            </Statistic>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Card.Content> : null}\n                </Card>\n            </div>\n        );\n    }\n}\n","export const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n/*\nTimezone adjustment flow\nAll times are stores in database in GMT+00 timezone\n1. Mentor selects availabilities slots in format Sunday-9am-12pm\n2. The slots are converted to times in format Sunday 9.00am\n3. Times are converted to GMT+00 using mentor's timezone\n4. When time is being displayed (on mentor's backlog/confirmed calls OR mentee's schedules), time is adjusted per mentee/mentor timezone\n*/\n\n/**\n * \n * @param {string} day - e.g. Sunday\n * @param {number} startTimeIn24h - e.g. 2100\n * @param {number} slotsNum - number of slots to generate\n * @returns {{time: number, day: string}[]} - e.g. [{time: 2100, day: 'Sunday'}, ...]\n */\nexport function generateTimesfromStartOfSlot(day, startTimeIn24h, slotsNum) {\n    let allTimes = []\n    let dayMoved = false; // day is only going to be moved once possibly in one timeSlot\n    while (slotsNum) {\n        slotsNum--;\n        allTimes.push({time: startTimeIn24h%2400, day: day});\n        startTimeIn24h += 50; // increment by 30 min\n        if (startTimeIn24h/2400 >= 1 && !dayMoved) {\n            day = moveDay(day, true); // move day forward if time is in next day, only possibility is moving day forward\n            dayMoved = true;\n        }\n    }\n    return allTimes;\n}\n\n/**\n * \n * @param {string} time - e.g. 9.30pm\n * @returns {number} - e.g. 2150\n */\nexport function convertTo24hoursFromDatabaseTime(time)\n{\n    let viewerAdjustedTime = 0;\n    let pm = time.substring(time.length-2) === 'pm'\n    let parts = time.split('.');\n    let minStr = parts[1].substring(0,2);\n    let min = minStr === '30' ? 50 : 0;\n    let hours = parts[0].length > 1 ? parseInt(parts[0].substring(0,2))*100 : parseInt(time[0])*100;\n    if ( (pm && hours === 1200) || (!pm && hours === 1200) ) {\n        hours = 0; //1200 will be added to pm, 12am needs to be reset to 0\n    }\n    viewerAdjustedTime = hours + (pm ? 1200 : 0) + min;\n    return viewerAdjustedTime;\n}\n\n/**\n * \n * @param {number} time - in 24 hr format 2350\n * @returns {string} - 12.30pm\n */\nexport function convertTo12h(time) {\n    let hh = parseInt(time/100);\n    let mm = (time%100)\n    let mmString = mm === 50 ? `30` : `00`;\n    let meridian = hh/12 >= 1 && hh/12 < 2 ? 'pm' : 'am';\n    return `${hh%12===0 ? 12: hh%12}.${mmString}${meridian}`\n}\n\n/**\n * \n * @param {string} time - in format 9am or 12pm\n * @returns {number} - 2350\n */\nexport function convertTo24hoursFromSlotBeginning(time) {\n    let pm = time.substring(time.length-2) === 'pm'\n    let adjustedTime = 0;\n    let hours = time.length > 3 ? parseInt(time.substring(0,2))*100 : parseInt(time[0])*100;\n    if ( (pm && hours === 1200) || (!pm && hours === 1200) ) {\n        hours = 0; //1200 will be added to pm, 12am needs to be reset to 0\n    }\n    adjustedTime = hours + (pm ? 1200 : 0);\n    return adjustedTime;\n}\n\n/**\n * \n * @param {string} day - e.g. Sunday\n * @param {bool} moveDayForward \n */\nexport function moveDay(day, moveDayForward) {\n    let dayInd = (days.indexOf(day) + (moveDayForward ? 1 : -1)) % days.length\n    if (dayInd < 0) {\n        return days[6];\n    }\n    return days[dayInd];\n}\n\n/**\n * @param {string[]} timeSlots - e.g. ['Sunday-9am-12pm', 'Monday-6pm-9pm']\n * @param {string} timezone - e.g. GMT+0600\n * @returns {string[]} - e.g. ['Sunday-9.00am', 'Sunday-9.30am', ...]\n */\nexport function adjustTimeForStorage(timeSlots, timezone) {\n    let allTimesAdjusted = [];\n    let GMTOffset = parseInt(timezone.substring(3));\n    timeSlots.forEach((slot) => {\n        let parts = slot.split('-');\n        let slotBegin = parts[1];\n        let day = parts[0];\n        // get 24h beginning of timeSlots\n        let _24hBegin = convertTo24hoursFromSlotBeginning(slotBegin);\n        // strip timezone from 24h time\n        let timezoneStripped24h = _24hBegin - GMTOffset;\n        // move day forward\n        if (timezoneStripped24h > 2400) {\n            day = moveDay(day, true);\n            timezoneStripped24h = timezoneStripped24h % 2400;\n        }\n        // move day backward\n        if (timezoneStripped24h < 0) {\n            day = moveDay(day, false);\n            timezoneStripped24h = 2400+timezoneStripped24h;\n        }\n        // generate 6 times\n        let timesFromSlot =  generateTimesfromStartOfSlot(day, timezoneStripped24h, 6);\n        allTimesAdjusted.push(timesFromSlot.map(timeSlot => {\n            let _12hrTime = convertTo12h(timeSlot.time)\n            return `${timeSlot.day}-${_12hrTime}`;\n        }))\n    });\n    return allTimesAdjusted;\n}\n\n/**\n * @param {string} time of format Sunday-9.30pm\n * @param {string} viewerGMT \n * @returns {string} string of format Sunday 9.30pm\n */\nexport function convertToViewerTimeZone(time, viewerGMT) {\n    let parts = time.split('-');\n    let GMTOffset = 0;\n    GMTOffset = parseInt(viewerGMT.substring(3))\n    let adjustedTime = 0;\n    adjustedTime = convertTo24hoursFromDatabaseTime(parts[1]) + GMTOffset;\n    let day = parts[0];\n    let timeIn24h = adjustedTime;\n    // move day forward\n    if (adjustedTime > 2400) {\n        day = moveDay(parts[0], true);\n        timeIn24h = adjustedTime%2400;\n    }\n    // move day backward\n    if (adjustedTime < 0) {\n        day = moveDay(parts[0], false);\n        timeIn24h = 2400+adjustedTime;\n    }\n    let timeDisplay = `${day} ${convertTo12h(timeIn24h)}`.replace('{\"','');\n    return (timeDisplay);\n}","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Grid, Button, Dropdown, Divider, Message, Container, Header, Icon, Input, Label } from 'semantic-ui-react';\nimport { BACKEND } from \"../App\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { adjustTimeForStorage } from \"./TimezoneAdjustmentHelpers\";\n\n//time choices\nconst PREFERRED_TIMES_SLOTS = ['6am-9am', '9am-12pm', '12pm-3pm', '3pm-6pm', '6pm-9pm', '9pm-12am'];\nlet preferredTimesSlots = PREFERRED_TIMES_SLOTS.map( val => {\n    return {key: val, text: val, value: val}\n})\n\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\nexport default class PreferredTimeSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sundayPreferredTimes: [],\n            mondayPreferredTimes: [],\n            tuesdayPreferredTimes: [],\n            wednesdayPreferredTimes: [],\n            thursdayPreferredTimes: [],\n            fridayPreferredTimes: [],\n            saturdayPreferredTimes: [],\n            signUpDone: false,\n            submitting: false,\n            zoom_info: '',\n        }\n        this.handleChangeSundayTime = this.handleChangeSundayTime.bind(this);\n        this.handleChangeMondayTime = this.handleChangeMondayTime.bind(this);\n        this.handleChangeTuesdayTime = this.handleChangeTuesdayTime.bind(this);\n        this.handleChangeWednesdayTime = this.handleChangeWednesdayTime.bind(this);\n        this.handleChangeThursdayTime = this.handleChangeThursdayTime.bind(this);\n        this.handleChangeFridayTime = this.handleChangeFridayTime.bind(this);\n        this.handleChangeSaturdayTime = this.handleChangeSaturdayTime.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    handleChangeSundayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            sundayPreferredTimes: value\n        })\n    }\n    handleChangeMondayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            mondayPreferredTimes: value\n        })\n    }\n    handleChangeTuesdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            tuesdayPreferredTimes: value\n        })\n    }\n    handleChangeWednesdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            wednesdayPreferredTimes: value\n        })\n    }\n    handleChangeThursdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            thursdayPreferredTimes: value\n        })\n    }\n    handleChangeFridayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            fridayPreferredTimes: value\n        })\n    }\n    handleChangeSaturdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            saturdayPreferredTimes: value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            submitting: true\n        });\n        let preferredTimes = [\n        ...this.state.sundayPreferredTimes && this.state.sundayPreferredTimes.map(time => `Sunday-${time}`),\n        ...this.state.mondayPreferredTimes && this.state.mondayPreferredTimes.map(time => `Monday-${time}`),\n        ...this.state.tuesdayPreferredTimes && this.state.tuesdayPreferredTimes.map(time => `Tuesday-${time}`),\n        ...this.state.wednesdayPreferredTimes && this.state.wednesdayPreferredTimes.map(time => `Wednesday-${time}`),\n        ...this.state.thursdayPreferredTimes && this.state.thursdayPreferredTimes.map(time => `Thursday-${time}`),\n        ...this.state.fridayPreferredTimes && this.state.fridayPreferredTimes.map(time => `Friday-${time}`),\n        ...this.state.saturdayPreferredTimes && this.state.saturdayPreferredTimes.map(time => `Saturday-${time}`),\n        ]\n        if (!this.state.zoom_info) {\n            swal({\n                title: \"Slow down there!\",\n                text: \"Please set up a zoom meeting room to complete sign up!\",\n                icon: \"error\",\n            });\n            this.setState({\n                submitting: false,\n            });\n            return;\n        }\n        // convert preferredTimes to database storage format:\n        let timesToStore = adjustTimeForStorage(preferredTimes, this.props.payload.timeZone);\n        let payload = Object.assign(this.props.payload, {preferredTimes: timesToStore, zoom_info: this.state.zoom_info});\n        fetch(`${BACKEND}/newMentor`, {\n            method: 'post',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n                this.setState({\n                    submitting: false\n                })\n               }\n               else {\n                swal({\n                    title: \"Congratulations!\",\n                    text: \"Your submission was successful! Please check your email to confirm your account.\",\n                    icon: \"success\",\n                  });\n                this.setState({\n                    signUpDone: true,\n                    submitting: false\n                })\n               }\n           }).catch(err => {\n                this.setState({\n                    submitting: false\n                }, () => {\n                    window.alert(\"Whoops! The server's acting up... :(\");\n                })\n            });\n    }\n    render() {\n        return (\n            <div>\n                {\n                    this.state.signUpDone? <Redirect to=\"/\" /> :\n                    <Container>\n                        <Message\n                            centered\n                            content=\"Please select the times that work for you. All time submissions are in your local time.\"\n                            style = {messageStyle}\n                        />\n                        <Divider/>\n                        <Grid.Row centered>\n                            <Button onClick={(e)=>{this.props.back(e)}}>\n                                Back\n                            </Button>\n                        </Grid.Row>\n                        <Grid.Row style={{\"padding\": \"14px\"}}></Grid.Row>\n                        <Grid columns={7}>\n                            <Grid.Column>\n                                <Header>Sunday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Sunday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeSundayTime} name='Sunday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Monday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Monday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeMondayTime} name='Monday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Tuesday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Tuesday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeTuesdayTime} name='Tuesday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Wednesday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Wednesday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeWednesdayTime} name='Wednesday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Thursday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Thursday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeThursdayTime} name='Thursday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Friday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Friday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeFridayTime} name='Friday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Saturday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Saturday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeSaturdayTime} name='Saturday'/>\n                            </Grid.Column>\n                        </Grid>\n                        <Grid.Row style={{\"padding\": \"14px\"}}></Grid.Row>\n                            <Grid.Row centered>\n                                <Grid.Row>\n                                    <Button onClick={()=>{window.open(\"https://www.zoom.us/signup\")}}>Click here to set up a zoom account for free!</Button>\n                                </Grid.Row>\n                                <Divider/>\n                                <Grid.Row>\n                                    <Label pointing='below'>Please insert your zoom meeting room ID below after you've set up a free account.</Label> \n                                </Grid.Row>\n                                <Grid.Row>\n                                    <Input name='zoom_info' placeholder='https://zoom.us/j/xxxxxxxxxx' onChange={this.handleChange}/>\n                                </Grid.Row>\n                            </Grid.Row>\n                            <Divider/>\n                        <Button \n                            color=\"blue\" \n                            type='submit'\n                            onClick={this.handleSubmit}\n                            loading={this.state.submitting}\n                            >\n                            <Icon name=\"unlock\"/>\n                            Submit\n                        </Button>\n                    </Container>\n                }\n            </div>\n            \n        )\n    }\n}\n","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, Button, Message, Grid, Dropdown } from 'semantic-ui-react';\nimport PreferredTimeSelector from '../PreferredTimeSelector';\nimport {ESSAY_BRAINSTORM, ESSAY_CRITIQUE, ECA_STRATEGY, COLLEGE_SHORTLISTING, FINANCIAL_AID_MATTERS, GENERAL_CONSULTATION} from \"../../topics\"\nimport axios from 'axios';\nimport { BACKEND, PATHS } from \"../../App\"\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\"\n\nexport const PREFERRED_TOPICS = [ESSAY_BRAINSTORM, ESSAY_CRITIQUE, ECA_STRATEGY, COLLEGE_SHORTLISTING, FINANCIAL_AID_MATTERS, GENERAL_CONSULTATION];\nlet preferredTopicsOptions = PREFERRED_TOPICS.map(val => {\n    return {key: val, text: val, value: val}\n})\n\nexport const LANGUAGE_OPTIONS_ALL = [\"Afrikanns\", \"Albanian\", \"Arabic\", \"Armenian\", \"Basque\", \n\"Bengali\", \"Bulgarian\", \"Catalan\", \"Cambodian\", \"Chinese (Mandarin)\", \"Croation\", \"Czech\", \"Danish\", \n\"Dutch\", \"English\", \"Estonian\", \"Fiji\", \"Finnish\", \"French\", \"Georgian\", \"German\", \"Greek\", \"Gujarati\", \n\"Hebrew\", \"Hindi\", \"Hungarian\", \"Icelandic\", \"Indonesian\", \"Irish\", \"Italian\", \"Japanese\", \"Javanese\", \n\"Korean\", \"Latin\", \"Latvian\", \"Lithuanian\", \"Macedonian\", \"Malay\", \"Malayalam\", \"Maltese\", \"Maori\", \"Marathi\", \n\"Mongolian\", \"Nepali\", \"Norwegian\", \"Persian\", \"Polish\", \"Portuguese\", \"Punjabi\", \"Quechua\", \"Romanian\", \"Russian\", \n\"Samoan\", \"Serbian\", \"Slovak\", \"Slovenian\", \"Spanish\", \"Swahili\", \"Swedish \", \"Tamil\", \"Tatar\", \"Telugu\", \"Thai\", \n\"Tibetan\", \"Tonga\", \"Turkish\", \"Ukranian\", \"Urdu\", \"Uzbek\", \"Vietnamese\", \"Welsh\", \"Xhosa\"];\nexport const LANGUAGE_OPTIONS = [\"Arabic\", \"Bengali\", \"Chinese (Mandarin)\", \"English\", \"French\", \"German\", \"Greek\", \"Hebrew\", \"Hindi\", \n\"Indonesian\", \"Italian\", \"Japanese\", \"Nepali\", \"Portuguese\", \"Romanian\", \"Russian\", \"Spanish\", \"Swahili\", \"Urdu\"];\nlet languageOptions = LANGUAGE_OPTIONS.map(val => {\n    return {key: val, text: val, value: val}\n})\n\nconst compName = 'MentorSignUp_LS';\n\nlet fieldStyle = {\n    width: '100%',\n}\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\nexport function getTimezoneOffset() {\n    function z(n) {\n        return (n < 10 ? '0' : '') + n\n    }\n    let offset = new Date().getTimezoneOffset();\n    let sign = offset < 0 ? '+' : '-';\n    offset = Math.abs(offset);\n    return sign + z(offset/60 | 0) + z(offset%60);\n  }\n\nexport default class SignUpMentor extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            college: '',\n            major: '',\n            location: '',\n            preferredTopics: [],\n            languages: [],\n            selectTimes: false,\n            position: '',\n            aboutYourself: '',\n            imageLink: '',\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeTopic = this.handleChangeTopic.bind(this);\n        this.handleChangeLanguages = this.handleChangeLanguages.bind(this);\n        this.selectTimes = this.selectTimes.bind(this);\n        this.setPreferredTimes = this.setPreferredTimes.bind(this);\n        this.formPayload = this.formPayload.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.backToSignUp = this.backToSignUp.bind(this);\n    }\n    backToSignUp(e) {\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState));\n            } catch (e) {\n                console.log(\"Could not get fetch state from local storage for\", compName);\n            }\n        }\n        e.preventDefault();\n        this.setState({\n            selectTimes: false,\n        })\n    }\n    setPreferredTimes(preferredTimes) {\n        this.setState({\n            preferredTimes\n        })\n    }\n    selectTimes(e) {\n        if (e) {e.preventDefault()};\n        let readyForTimeSelect = (this.state.name && this.state.email && this.state.password && this.state.confirmPassword &&\n            this.state.major && this.state.location && this.state.preferredTopics.length && this.state.position\n            && this.state.aboutYourself) && (this.state.password === this.state.confirmPassword);\n        if (readyForTimeSelect) {\n            sessionStorage.setItem(compName, JSON.stringify(this.state));\n            this.setState({\n                selectTimes: true\n            })\n        } else {\n            swal({\n                title: \"Yikes!\",\n                text: \"Please fill in all fields to continue. Confirm that passwords match!\",\n                icon: \"error\",\n            });\n        }\n    }\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    handleChangeTopic(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            preferredTopics: value\n        })\n    }\n\n    handleChangeLanguages(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            languages: value\n        })\n    }\n\n    uploadImage(e) {\n        e.preventDefault();\n        let file = e.target.files[0];\n        let data = new FormData();\n        data.append('file', file);\n        axios.post(`${BACKEND}/imageUpload`, data, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n        }).then(\n            success => {\n                console.log(success); // Handle the success response object\n                this.setState({imageLink: success.data})\n            }\n        ).catch(\n            error => console.log(error) // Handle the error response object\n        );\n    }\n\n    formPayload() {\n        let timeZone = `GMT${getTimezoneOffset()}`;\n        return {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            college: this.state.college,\n            major: this.state.major,\n            location: this.state.location,\n            preferredTimes: this.state.preferredTimes,\n            preferredTopics: this.state.preferredTopics,\n            languages: this.state.languages,\n            timeZone: timeZone,\n            position: this.state.position,\n            aboutYourself: this.state.aboutYourself,\n            imageLink: this.state.imageLink\n        }\n    }\n\n    render() {\n    return (\n    <div>\n        <Message\n            style= {messageStyle}\n            attached\n            centered\n            header=\"Mentor Sign up\"\n            content=\"Welcome! We're excited to have you on board.\"\n        />\n            <Grid>\n            {\n                this.state.selectTimes? <PreferredTimeSelector \n                    payload={this.formPayload()}\n                    setPreferredTimes={this.setPreferredTimes}\n                    back={this.backToSignUp}\n                /> : \n                <Grid.Column centered>\n                <Grid.Row centered>\n                    <Button>\n                        <Link to={PATHS.root}>\n                            Back\n                        </Link>\n                    </Button>\n                </Grid.Row>\n                <Grid.Row style={{\"padding\": \"14px\"}}></Grid.Row>\n                <Grid.Row>\n                <Form >\n                    <Form.Field\n                    type=\"email\"\n                    required=\"true\"\n                    style={fieldStyle}\n                    >\n                        <label>Email</label>\n                        <input placeholder='Email' name=\"email\" onChange={this.handleChange} value={this.state.email} />\n                    </Form.Field>\n                    <Form.Field\n                        type=\"password\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>Password</label>\n                        <input placeholder='***' name=\"password\" type=\"password\" onChange={this.handleChange} value={this.state.password}/>\n                    </Form.Field>\n                    <Form.Field\n                        type=\"password\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>Confirm Password</label>\n                        <input placeholder='***' name=\"confirmPassword\" type=\"password\" onChange={this.handleChange} value={this.state.confirmPassword}/>\n                    </Form.Field>\n                    {this.state.password !== this.state.confirmPassword ? \n                    <Message\n                        attached\n                        centered\n                        error\n                        content=\"Your passwords do not match!\"\n                    /> \n                    : null}\n                    <Form.Field\n                        type=\"text\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>Name</label>\n                        <input placeholder='Name' name=\"name\" onChange={this.handleChange} value={this.state.name}/>\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>Major</label>\n                        <input placeholder='Major' name=\"major\" onChange={this.handleChange} value={this.state.major}/>\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>College</label>\n                        <input placeholder='College' name=\"college\" onChange={this.handleChange} value={this.state.college}/>\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>Location</label>\n                        <input placeholder='Location' name=\"location\" onChange={this.handleChange} value={this.state.location}/>\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>Professional Position</label>\n                        <input placeholder='Position' name=\"position\" onChange={this.handleChange} value={this.state.position}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label>What languages do you speak?</label>\n                    <Dropdown placeholder='Select all languages you speak...' fluid multiple selection options={languageOptions} onChange={this.handleChangeLanguages} name=\"languages\" value={this.state.languages}/>\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\"\n                        required=\"true\"\n                        style={fieldStyle}\n                    >\n                        <label>Tell us a little bit about yourself!</label>\n                        <input placeholder='Interests, Hobbies, Motos...' name=\"aboutYourself\" maxLength = \"500\" onChange={this.handleChange} value={this.state.aboutYourself}/>\n                    </Form.Field>\n                    <Form.Field\n                        require=\"true\"\n                    >\n                        <label>Select the topics you would like to consult.</label>\n                    <Dropdown placeholder='Preferred Topics' fluid multiple selection options={preferredTopicsOptions} onChange={this.handleChangeTopic} name=\"preferredTopics\" value={this.state.preferredTopics}/>\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Let's put a face on you! Please upload an image.</label>\n                        <input type=\"file\" onChange={this.uploadImage} class=\"ui huge yellow center floated button\"/>\n                    </Form.Field>\n                    <Grid.Row>\n                        <Button onClick={this.selectTimes}>Select preferred times</Button>\n                    </Grid.Row>\n                    </Form>\n                    </Grid.Row>\n                </Grid.Column>\n            }\n            </Grid>\n            \n        </div>)\n    }\n}","// topic choices --> must match with backend\nexport const ESSAY_BRAINSTORM = 'Essay Brainstorm';\nexport const ESSAY_CRITIQUE = 'Essay Critique';\nexport const ECA_STRATEGY = 'ECA Development';\nexport const COLLEGE_SHORTLISTING = 'College Shortlisting';\nexport const GENERAL_CONSULTATION = 'General Consulation';\nexport const FINANCIAL_AID_MATTERS = 'Financial Aid Matters';","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid, Form, Dropdown, Icon, Button } from 'semantic-ui-react'\nimport { BACKEND } from \"../App\"\nimport swal from \"sweetalert\";\nimport { PREFERRED_TOPICS, LANGUAGE_OPTIONS } from \"./SignUp/SignUpMentor\";\nlet preferredTopicsOptions = PREFERRED_TOPICS.map(val => {\n    return {key: val, text: val, value: val}\n});\nlet languageOptions = LANGUAGE_OPTIONS.map(val => {\n    return {key: val, text: val, value: val}\n});\n\nconst CUSTOM = 'Add your own school'\n\n//TODO: Write handleSubmit functions and backend API to update database\nlet fieldStyle = {\n    width: '100%',\n}\n    \nexport default class EditProfile extends React.Component {\n    // TODO: Add a property to show requests serviced\n    constructor(props){\n        super(props);\n        this.state = {\n            password: '',\n            confirmPassword: '',\n            school: '',\n            major: '', // mentor\n            location: '',\n            preferredTopics: [], // mentor\n            position: '', // mentor\n            languages: [], // mentor\n            zoom_info: '', //mentor\n            aboutYourself: '',\n            imageLink: '',\n            submitting: false,\n            schoolCustom: '',\n            schoolSelected: false,\n            customSchoolSelected: false,\n            schools: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeTopic = this.handleChangeTopic.bind(this);\n        this.handleMentorEditSubmit = this.handleMentorEditSubmit.bind(this);\n        this.handleMenteeEditSubmit = this.handleMenteeEditSubmit.bind(this);\n        this.handleChangeLanguages = this.handleChangeLanguages.bind(this);\n        this.handleSchoolSelection = this.handleSchoolSelection.bind(this);\n    }\n\n    handleMentorEditSubmit(e) {\n        if (this.state.password !== this.state.confirmPassword) {\n            swal({\n                title: \"Passwords do not match!\",\n                text: \"Please ensure your passwords match.\",\n                icon: \"error\",\n            });\n            return;\n        }\n        e.preventDefault();\n        let payload = {\n            password: this.state.password,\n            school: this.state.school,\n            major: this.state.major, // mentor\n            location: this.state.location,\n            preferredTopics: this.state.preferredTopics,\n            languages: this.state.languages, //mentor\n            zoom_info: this.state.zoom_info,\n            position: this.state.position, // mentor\n            aboutYourself: this.state.aboutYourself,\n            imageLink: this.state.imageLink,\n            email: this.props.email\n        }\n        this.setState({\n            submitting: true,\n        }, async () => {\n            fetch(`${BACKEND}/editMentor`, {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify(payload)\n               }).then(async res => {\n                   let resolvedRes = await res;\n                   if (resolvedRes.status !== 200) {\n                    swal({\n                        title: \"Oops!\",\n                        text: \"Something went wrong... Please try again.\",\n                        icon: \"error\",\n                    });\n                   }\n                   else {\n                    swal({\n                        title: \"All set!\",\n                        text: \"You've just updated your profile.\",\n                        icon: \"success\",\n                      });\n                    this.props.goBack();\n                   }\n               }).then(() => {\n                   this.setState({\n                       submitting: false,\n                   }, () => {\n                    this.props.goBack();\n                   })\n            }).catch(err => {\n                this.setState({\n                    submitting: false\n                }, () => {\n                    window.alert(\"Whoops! The server's acting up... :(\");\n                })\n            });\n        })\n    }\n\n    handleSchoolSelection(e, {value}) {\n        e.preventDefault();\n        if (value === CUSTOM) {\n            this.setState({\n                customSchoolSelected: true,\n                schoolSelected: true\n            })\n        } else {\n            this.setState({\n                school: value,\n                schoolSelected: true\n            })\n        }\n    }\n\n    componentDidMount() {\n        // TODO: get list of available schools\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getSchools`, {\n            method: 'get',\n            headers: headers,\n            credentials: 'include',\n        }).then(async res => {\n                let resolvedRes = await res;\n                resolvedRes = await resolvedRes.json()\n                this.setState({\n                    schools: resolvedRes.schools\n                })\n        }\n        ).catch(e => console.log(e))\n    }\n\n    handleMenteeEditSubmit(e) {\n        if (this.state.password !== this.state.confirmPassword) {\n            swal({\n                title: \"Passwords do not match!\",\n                text: \"Please ensure your passwords match.\",\n                icon: \"error\",\n            });\n            return;\n        }\n        let payload = {\n            password: this.state.password,\n            school: this.state.school,\n            schoolCustom: this.state.schoolCustom,\n            customSchoolSelected: this.state.customSchoolSelected,\n            schoolSelected: this.state.schoolSelected,\n            location: this.state.location,\n            aboutYourself: this.state.aboutYourself,\n            imageLink: this.state.imageLink,\n            email: this.props.email,\n        }\n        this.setState({\n            submitting: true,\n        }, async () => {\n            fetch(`${BACKEND}/editMentee`, {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify(payload)\n               }).then(async res => {\n                   let resolvedRes = await res;\n                   if (resolvedRes.status !== 200) {\n                    swal({\n                        title: \"Oops!\",\n                        text: \"Something went wrong... Please try again.\",\n                        icon: \"error\",\n                    });\n                   }\n                   else {\n                    swal({\n                        title: \"All set!\",\n                        text: \"You've just updated your profile.\",\n                        icon: \"success\",\n                      });\n                    this.props.goBack();\n                   }\n               }).then(() => {\n                   this.setState({\n                       submitting: false,\n                   }, () => {\n                    this.props.goBack();\n                   })\n            }).catch(err => {\n                this.setState({\n                    submitting: false\n                }, () => {\n                    window.alert(\"Whoops! The server's acting up... :(\");\n                })\n            });\n        })\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    handleChangeTopic(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            preferredTopics: value\n        })\n    }\n\n    handleChangeLanguages(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            languages: value\n        })\n    }\n\n    render() {\n        let schoolOptions = this.state.schools ? this.state.schools.map(school => {\n            return {\n                key: school.name,\n                value: school.name,\n                text: school.name\n            }\n        }) : null\n        if (schoolOptions) {\n            schoolOptions.push({\n                key: CUSTOM,\n                value: CUSTOM,\n                text: CUSTOM\n            })\n        }\n        let mentorEditForm = \n        <Form onSubmit={this.handleMentorEditSubmit}>\n            <Form.Field\n                type=\"password\"\n                style={fieldStyle}\n            >\n                <label>Password</label>\n                <input placeholder='***' name=\"password\" type=\"password\" onChange={this.handleChange} />\n            </Form.Field>\n            <Form.Field\n                type=\"password\"\n                style={fieldStyle}\n            >\n                <label>Confirm Password</label>\n                <input placeholder='***' name=\"confirmPassword\" type=\"password\" onChange={this.handleChange} />\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n                disabled={true}\n            >\n                <label>Name</label>\n                <input placeholder='Name' name=\"name\" value={this.props.name} />\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n            >\n                <label>Major</label>\n                <input placeholder={this.props.major} name=\"major\" onChange={this.handleChange}/>\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n            >\n                <label>College</label>\n                <input placeholder={this.props.school} name=\"college\" onChange={this.handleChange}/>\n            </Form.Field>\n            <Form.Field>\n                <label>What languages do you speak?</label>\n                    <Dropdown placeholder='Select all languages you speak...' fluid multiple selection options={languageOptions} onChange={this.handleChangeLanguages} name=\"languages\" value={this.state.languages}/>\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n            >\n                <label>Location</label>\n                <input placeholder={this.props.location} name=\"location\" onChange={this.handleChange}/>\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n            >\n                <label>Professional Position</label>\n                <input placeholder={this.props.position} name=\"position\" onChange={this.handleChange}/>\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n            >\n                <label>Zoom Meeting Link</label>\n                <input placeholder={this.props.zoom_info} name=\"zoom_info\" onChange={this.handleChange}/>\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n            >\n                <label>Tell us a little bit about yourself!</label>\n                <input placeholder={this.props.aboutYourself} name=\"aboutYourself\" maxLength = \"500\" onChange={this.handleChange}/>\n            </Form.Field>\n            <Form.Field>\n                <label>Select the topics you would like to consult.</label>\n            <Dropdown placeholder='Preferred Topics' fluid multiple selection options={preferredTopicsOptions} onChange={this.handleChangeTopic} name=\"preferredTopics\"/>\n            </Form.Field>\n            <Form.Field>\n                <label>Let's put a face on you! Please upload an image.</label>\n                <input type=\"file\" onChange={this.uploadImage} class=\"ui huge yellow center floated button\"/>\n            </Form.Field>\n            <Button \n                color=\"blue\" \n                type='submit'\n                loading={this.state.submitting}>\n                <Icon name=\"unlock\"/>\n                Submit\n            </Button>\n            <Button onClick={(e) => this.props.goBack(e)}>\n                <Icon name=\"backward\"/>\n                Go Back.\n            </Button>\n        </Form>\n\n        let menteeEditForm = \n        <Form onSubmit={this.handleMenteeEditSubmit}>\n            <Form.Field\n                type=\"password\"\n                style={fieldStyle}\n            >\n                <label>Password</label>\n                <input placeholder='***' name=\"password\" type=\"password\" onChange={this.handleChange} />\n            </Form.Field>\n            <Form.Field\n                type=\"password\"\n                style={fieldStyle}\n            >\n                <label>Confirm Password</label>\n                <input placeholder='***' name=\"confirmPassword\" type=\"password\" onChange={this.handleChange} />\n            </Form.Field>\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n                disabled={true}\n            >\n                <label>Name</label>\n                <input placeholder='Name' name=\"name\" value={this.props.name} />\n            </Form.Field>\n            {!this.state.customSchoolSelected?\n                <Form.Field>\n                    <label>Select your school</label>\n                    <Dropdown placeholder='Select the school your attend' fluid selection options={schoolOptions} onChange={this.handleSchoolSelection} name=\"school\"/>\n                </Form.Field>\n                : \n                <Form.Field\n                type=\"text\"\n                required=\"true\"\n                style={fieldStyle}\n                >\n                    <label>Add your School</label>\n                    <input placeholder='School' name=\"schoolCustom\" onChange={this.handleChange} />\n                </Form.Field>\n            }\n            <Form.Field\n                type=\"text\"\n                style={fieldStyle}\n            >\n                <label>Location</label>\n                <input placeholder={this.props.location} name=\"location\" onChange={this.handleChange}/>\n            </Form.Field>\n            <Form.Field\n                    type=\"text\"\n                    style={fieldStyle}\n                >\n                    <label>Tell us a little bit about yourself!</label>\n                    <input placeholder={this.props.aboutYourself} name=\"aboutYourself\" maxLength = \"500\" onChange={this.handleChange}/>\n                </Form.Field>\n                <Form.Field>\n                    <label>Let's put a face on you! Please upload an image.</label>\n                    <input type=\"file\" onChange={this.uploadImage} class=\"ui huge yellow center floated button\"/>\n                </Form.Field>\n            <Button \n                color=\"blue\" \n                type='submit'\n                loading={this.state.submitting}>\n                <Icon name=\"unlock\"/>\n                Submit\n            </Button>\n            <Button onClick={(e) => this.props.goBack(e)}>\n                <Icon name=\"backward\"/>\n                Go Back.\n            </Button>\n        </Form>\n        return (  \n            <Container>\n                <Grid centered>\n                {this.props.isMentor ? \n                    mentorEditForm\n                    : \n                    menteeEditForm\n                    }\n                </Grid>\n            </Container>\n          )\n    }\n}\n","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Grid, Button, Dropdown, Divider, Message, Container, Header, Icon } from 'semantic-ui-react';\nimport { BACKEND } from \"../App\";\nimport swal from \"sweetalert\";\nimport { adjustTimeForStorage } from \"./TimezoneAdjustmentHelpers\";\n\n//time choices\nconst PREFERRED_TIMES_SLOTS = ['6am-9am', '9am-12pm', '12pm-3pm', '3pm-6pm', '6pm-9pm', '9pm-12am'];\nlet preferredTimesSlots = PREFERRED_TIMES_SLOTS.map( val => {\n    return {key: val, text: val, value: val}\n})\n\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\nexport default class PreferredTimeEditor extends React.Component {\n    // mentorId --> props\n    constructor(props) {\n        super(props);\n        this.state = {\n            sundayPreferredTimes: [],\n            mondayPreferredTimes: [],\n            tuesdayPreferredTimes: [],\n            wednesdayPreferredTimes: [],\n            thursdayPreferredTimes: [],\n            fridayPreferredTimes: [],\n            saturdayPreferredTimes: [],\n            done: false,\n        }\n        this.handleChangeSundayTime = this.handleChangeSundayTime.bind(this);\n        this.handleChangeMondayTime = this.handleChangeMondayTime.bind(this);\n        this.handleChangeTuesdayTime = this.handleChangeTuesdayTime.bind(this);\n        this.handleChangeWednesdayTime = this.handleChangeWednesdayTime.bind(this);\n        this.handleChangeThursdayTime = this.handleChangeThursdayTime.bind(this);\n        this.handleChangeFridayTime = this.handleChangeFridayTime.bind(this);\n        this.handleChangeSaturdayTime = this.handleChangeSaturdayTime.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    // TODO: Refactor into map function to allow code re-use\n    handleChangeSundayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            sundayPreferredTimes: value\n        })\n    }\n    handleChangeMondayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            mondayPreferredTimes: value\n        })\n    }\n    handleChangeTuesdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            tuesdayPreferredTimes: value\n        })\n    }\n    handleChangeWednesdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            wednesdayPreferredTimes: value\n        })\n    }\n    handleChangeThursdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            thursdayPreferredTimes: value\n        })\n    }\n    handleChangeFridayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            fridayPreferredTimes: value\n        })\n    }\n    handleChangeSaturdayTime(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            saturdayPreferredTimes: value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let preferredTimes = [\n        ...this.state.sundayPreferredTimes && this.state.sundayPreferredTimes.map(time => `Sunday-${time}`),\n        ...this.state.mondayPreferredTimes && this.state.mondayPreferredTimes.map(time => `Monday-${time}`),\n        ...this.state.tuesdayPreferredTimes && this.state.tuesdayPreferredTimes.map(time => `Tuesday-${time}`),\n        ...this.state.wednesdayPreferredTimes && this.state.wednesdayPreferredTimes.map(time => `Wednesday-${time}`),\n        ...this.state.thursdayPreferredTimes && this.state.thursdayPreferredTimes.map(time => `Thursday-${time}`),\n        ...this.state.fridayPreferredTimes && this.state.fridayPreferredTimes.map(time => `Friday-${time}`),\n        ...this.state.saturdayPreferredTimes && this.state.saturdayPreferredTimes.map(time => `Saturday-${time}`),\n        ]\n\n        let timesToStore = adjustTimeForStorage(preferredTimes, this.props.timeZone);\n        let payload = Object.assign({email: this.props.mentorEmail}, {preferredTimes: timesToStore})\n        fetch(`${BACKEND}/editTimes`, {\n            method: 'post',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"All set!\",\n                    text: \"You've just updated your availabilities.\",\n                    icon: \"success\",\n                  });\n                this.props.goBack();\n               }\n           });\n    }\n    render() {\n        return (\n            <div>\n                {\n                    <Container>\n                        <Message\n                            centered\n                            content=\"Please select the times that work for you. All time submissions are in your local time.\"\n                            style = {messageStyle}\n                        />\n                        <Divider/>\n                        <Grid columns={7}>\n                            <Grid.Column>\n                                <Header>Sunday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Sunday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeSundayTime} name='Sunday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Monday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Monday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeMondayTime} name='Monday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Tuesday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Tuesday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeTuesdayTime} name='Tuesday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Wednesday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Wednesday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeWednesdayTime} name='Wednesday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Thursday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Thursday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeThursdayTime} name='Thursday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Friday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Friday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeFridayTime} name='Friday'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Header>Saturday</Header>\n                                <Divider/>\n                                    <Dropdown placeholder='Saturday' fluid multiple selection options=\n                                    {preferredTimesSlots} \n                                    onChange={this.handleChangeSaturdayTime} name='Saturday'/>\n                            </Grid.Column>\n                        </Grid>\n                        <Grid.Row style={{\"padding\": \"14px\"}}></Grid.Row>\n                        <Grid columns={2}>\n                            <Grid.Column>\n                                <Button onClick={(e) => this.props.goBack(e)}>\n                                    <Icon name=\"backward\"/>\n                                    Go Back.\n                                </Button>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Button \n                                    color=\"blue\" \n                                    type='submit'\n                                    onClick={this.handleSubmit}\n                                    >\n                                    <Icon name=\"unlock\"/>\n                                    Submit\n                                </Button>\n                            </Grid.Column>\n                        </Grid>\n\n                    </Container>\n                }\n            </div>\n            \n        )\n    }\n}\n","import React from 'react'\nimport { Card, Divider, Form, Segment, List, Label, Button, Select, Modal, Input, Header, Icon } from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\";\nimport swal from \"sweetalert\";\n\nconst compName = 'Tracking_LS';\n\nexport const REACH = 'Reach'\nexport const MATCH = 'Match'\nexport const SAFETY = 'Safety'\n\n// TODO: Make update application details function\n\n/*\n    collegeShortlist: [\n        {\n        name: string,\n        rank: string,\n        }\n    ],\n    grade: string,\n    OALevel: string,\n    SAT: string,\n    OtherExams: string,\n    ECA: {\n        activityOrAchievement: string,\n        yearsOfCommit: string,\n        positionOrDesc: string\n    } [],\n    viewMode: boolean,\n    trackingId: string,\n    menteeId: string\n*/\n\nexport function groupByRank(collegeObjs) {\n\n    let sortedShortList = {\n        MATCH: [],\n        REACH: [],\n        SAFETY: []\n    }\n    collegeObjs.forEach( collegeObj => {\n        switch(collegeObj.rank) {\n            case(MATCH):\n                sortedShortList.MATCH.push(collegeObj.name)\n                break\n            case(REACH):\n                sortedShortList.REACH.push(collegeObj.name)\n                break\n            case(SAFETY):\n                sortedShortList.SAFETY.push(collegeObj.name)\n                break\n            default:\n                break\n        }\n    })\n    return sortedShortList\n}\n\nexport default class Tracking extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collegeShortlist: [],\n            grade: '',\n            OALevel: '',\n            SAT: '',\n            OtherExams: '',\n            ECA: [],\n            rank: '', // for new college being added\n            collegeName: '', // for new college being added\n            activityOrAchievement: '', // for new eca\n            yearsOfCommit: '', // for new eca\n            positionOrDesc: '', // for new eca\n        }\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.removeCollege = this.removeCollege.bind(this);\n        this.addCollege = this.addCollege.bind(this);\n        this.removeECA = this.removeECA.bind(this);\n        this.addECA = this.addECA.bind(this);\n        this.updateTracking = this.updateTracking.bind(this);\n        this.getECA = this.getECA.bind(this);\n        this.getCollegesList = this.getCollegesList.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeCollegeRank = this.handleChangeCollegeRank.bind(this);\n        this.handleChangeGrade = this.handleChangeGrade.bind(this);\n    }\n\n    // TODO: Include submit validator to disable update if new changes are same as old\n\n    handleChangeGrade(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            grade: value\n        })\n    }\n\n    handleChangeCollegeRank(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            rank: value\n        })\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    updateTracking(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            trackingId: this.props.trackingId,\n            menteeId: this.props.menteeId,\n            collegeShortlist: this.state.collegeShortlist,\n            grade: this.state.grade,\n            OALevel: this.state.OALevel,\n            SAT: this.state.SAT,\n            OtherExams: this.state.OtherExams,\n            ECA: this.state.ECA\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/updateTracking`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Updated Application Details!\",\n                    text: `Mentors will be able to help you better now!`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        if (this.props.menteeId) {\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/json');\n            headers.append('Accept', 'application/json');\n            let payload = {\n                menteeId: this.props.menteeId\n            }\n            fetch(`${BACKEND}/getTracking`, {\n                method: 'post',\n                headers: headers,\n                credentials: 'include',\n                body: JSON.stringify(payload)\n            }).then(async res => {\n                    let resolvedRes = await res;\n                    resolvedRes = await resolvedRes.json()\n                    let {ECA, OAlevel, SAT, OtherExams, grade, collegeShortlist} = resolvedRes\n                    let ECAparsed = JSON.parse(ECA)\n                    let collegeShortlistParsed = JSON.parse(collegeShortlist)\n                    this.setState({\n                        ECA: ECAparsed || [],\n                        OALevel: OAlevel,\n                        SAT: SAT,\n                        OtherExams: OtherExams,\n                        collegeShortlist: collegeShortlistParsed || [],\n                        grade: grade\n                    })\n            }\n            ).catch(e => console.log(e))\n        }\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n        // only read from cached state if on same mentor's profile\n        if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState));\n                // set state but overwrite with API call\n            } catch (e) {\n                console.log(\"Could not get fetch state from local storage for\", compName);\n            }\n        }\n    }\n\n    addCollege() {\n        let newCollege = {\n            rank: this.state.rank,\n            name: this.state.collegeName\n        }\n        let collegeShortlistNew = this.state.collegeShortlist\n        if (collegeShortlistNew.some( college => {\n            return college.name.toLowerCase() === newCollege.name.toLowerCase()\n        })) {\n            return;\n        }\n        collegeShortlistNew.push(newCollege)\n        this.setState({\n            collegeShortlist: collegeShortlistNew\n        })\n    }\n\n    addECA() {\n        let newECA = {\n            activityOrAchievement: this.state.activityOrAchievement,\n            yearsOfCommit: this.state.yearsOfCommit,\n            positionOrDesc: this.state.positionOrDesc\n        }\n        let ECAListNew = this.state.ECA\n        ECAListNew.push(newECA)\n        this.setState({\n            ECA: ECAListNew\n        })\n    }\n\n    removeECA(name){\n        let ECA = this.state.ECA;\n        ECA = ECA.filter(eca => {\n            return eca.activityOrAchievement !== name\n        })\n        this.setState({\n            ECA: ECA\n        })\n    }\n\n    getECA(edit=true) {\n        if (this.state.ECA && !this.state.ECA.length) {\n            return <Header block>No ECAs added!</Header>\n        }\n        return this.state.ECA && this.state.ECA.map(eca => {\n            return <List.Item>\n                        <Label>\n                            Activity/Achievement: {eca.activityOrAchievement}\n                            {edit? <Icon onClick={() => this.removeECA(eca.activityOrAchievement)} name='delete' />: null}\n                        </Label>\n                <List.Description>Position/Description: {eca.positionOrDesc}</List.Description>\n                <List.Description>Commitment: {eca.yearsOfCommit}</List.Description>\n            </List.Item>\n        })\n    }\n\n    removeCollege(name){\n        let collegeShortlist = this.state.collegeShortlist;\n        collegeShortlist = collegeShortlist.filter(college => {\n            return college.name !== name\n        })\n        this.setState({\n            collegeShortlist: collegeShortlist\n        })\n    }\n\n    getCollegesList(edit=true) {\n        if (this.state.collegeShortlist && !this.state.collegeShortlist.length) {\n            return <Header block>No colleges in shortlist!</Header>\n        }\n        let sortedShortlist = groupByRank(this.state.collegeShortlist)\n        if (!sortedShortlist) {\n            return []\n        }\n        let ranks = Object.keys(sortedShortlist)\n        return ranks.map(rank => {\n            if (!sortedShortlist[rank].length) {\n                return null;\n            }\n            return(\n                <>\n                <Label size={'large'}>{rank}</Label>\n                {sortedShortlist[rank].map( college => {\n                    return (<List.Item>\n                        <>\n                        {college}\n                        {edit? <Icon name='delete' onClick={() => this.removeCollege(college)}/>: null}\n                        </>\n                    </List.Item>)\n                })}\n                </>\n            )\n            \n        })\n    }\n\n    render() {\n        let options = [REACH, MATCH, SAFETY].map(val => {\n            return {\n                key: val,\n                value: val,\n                text: val\n            }\n        })\n        let updateCollegesField = \n            <Segment>\n                <Form onSubmit={this.addCollege}>\n                    <Form.Field>\n                        <Header block>College Shortlist</Header>\n                        <List>\n                            {this.getCollegesList()}\n                        </List>\n                        <Input type='text' placeholder='New College...' action name=\"collegeName\" onChange={this.handleChange}>\n                            <input />\n                            <Select compact options={options} defaultValue={null} name=\"rank\" onChange={this.handleChangeCollegeRank}/>\n                            <Button type='submit'>Add College</Button>\n                        </Input>\n                    </Form.Field>\n                </Form>\n            </Segment>\n        \n        let updateECAInfo = \n            <Segment>\n                <Form onSubmit={this.addECA}>\n                    <Header block>ECA Profile</Header>\n                    <List>\n                        {this.getECA()}\n                    </List>\n                    <Form.Field\n                        type=\"text\">\n                        <label>Activity or Achievement</label>\n                        <input maxLength={100} placeholder='Activity... ' name=\"activityOrAchievement\" onChange={this.handleChange} value={this.state.activityOrAchievement} />\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\">\n                        <label>Years of commitment</label>\n                        <input maxLength={100} placeholder='Years involved... ' name=\"yearsOfCommit\" onChange={this.handleChange} value={this.state.yearsOfCommit} />\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\">\n                        <label>Position/Description</label>\n                        <input maxLength={100} placeholder='Position or brief description of role... ' name=\"positionOrDesc\" onChange={this.handleChange} value={this.state.positionOrDesc} />\n                    </Form.Field>\n                    <Button type='submit'>Add ECA</Button>\n                </Form>\n            </Segment>\n        let testAndBackgroundInfo = \n            <Segment>\n                <Form onSubmit={this.updateTracking}>\n                    <Form.Field>\n                        <label>Current Class/Grade</label>\n                        <Select compact options={['8th', '9th', '11th', '12th'].map(grade => {return {key: grade, value: grade, text: grade}})} defaultValue={null} name=\"grade\" onChange={this.handleChangeGrade}/>\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\">\n                        <label>O/A Level (or equivalent)</label>\n                        <input maxLength={200} placeholder='Your O/A level results...' name=\"OALevel\" onChange={this.handleChange} value={this.state.OALevel} />\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\">\n                        <label>SAT</label>\n                        <input maxLength={200} placeholder='Your SAT results... (or registration date)' name=\"SAT\" onChange={this.handleChange} value={this.state.SAT} />\n                    </Form.Field>\n                    <Form.Field\n                        type=\"text\">\n                        <label>Other Exams</label>\n                        <input maxLength={200} placeholder='Any other exam results... (or registration dates)' name=\"OtherExams\" onChange={this.handleChange} value={this.state.OtherExams} />\n                    </Form.Field>\n                </Form>\n            </Segment>\n            \n        let updateTrackingModal = <div>\n            <Divider/>\n            <Modal\n                open={this.state.modalOpen}\n                trigger={\n                    <Button\n                        onClick={() => {this.setState({modalOpen: true})}}\n                        centered\n                        style={{'width': '100%'}}\n                    >\n                        Update Application Details\n                    </Button>\n                }>\n                <Modal.Header>Application Details</Modal.Header>\n                <Modal.Content>\n                    {updateCollegesField}\n                    {updateECAInfo}\n                    {testAndBackgroundInfo}\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={() => {this.setState({modalOpen: false})}}>\n                        Close\n                    </Button>\n                    <Button \n                        disabled={!this.state.grade && !this.state.OALevel && !this.state.OtherExams && !this.state.OtherExams && !this.state.rank && !this.state.collegeName && !this.state.positionOrDesc && !this.state.yearsOfCommit && !this.state.activityOrAchievement}\n                        onClick={this.updateTracking}>\n                        Update\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        </div>\n        return (\n            <div>\n                <Divider/>\n                <Card>\n                    <Card.Content centered>\n                        <Card.Header>Progress</Card.Header>\n                        {!this.state.grade && !this.state.OALevel && !this.state.OtherExams && !this.state.collegeShortlist.length && !this.state.ECA.length ? <><Card.Meta>Application details not added...</Card.Meta> </> : null}\n                        {this.state.collegeShortlist && this.state.collegeShortlist.length? \n                        <Segment>\n                            <Header block>\n                                College Shortlist\n                            </Header>\n                            <List>\n                            {this.getCollegesList(false)}\n                            </List>\n                        </Segment>\n                        : null}\n                        {this.state.ECA && this.state.ECA.length? \n                        <Segment>\n                            <Header block>ECA Profile</Header>\n                            <List>\n                                {this.getECA(false)}\n                            </List>\n                        </Segment>\n                        : null}\n                        {this.state.grade?\n                        <>\n                        <Card.Meta>Grade</Card.Meta>\n                        <Card.Description>{this.state.grade}</Card.Description>\n                        </>: null}\n                        {this.state.OALevel?\n                        <>\n                        <Card.Meta>O/A Results (or equivalent)</Card.Meta>\n                        <Card.Description>{this.state.OALevel}</Card.Description>\n                        </>: null}\n                        {this.state.OtherExams?\n                        <>\n                        <Card.Meta>Other Scores</Card.Meta>\n                        <Card.Description>{this.state.OtherExams}</Card.Description>\n                        </>: null}\n                    </Card.Content>\n                    {!this.props.viewMode? updateTrackingModal : null}\n                </Card>\n            </div>\n        );\n    }\n}\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid, Divider, Icon, Button, Segment } from 'semantic-ui-react'\nimport CardImage from './CardImage';\nimport CardDetails from './CardDetails';\nimport EditProfile from './EditProfile';\nimport PreferredTimeEditor from './PreferredTimesEditor';\nimport Tracking from \"./MenteeView/Tracking\"\n\nconst compName = 'Profile_LS';\n\nexport default class Profile extends React.Component {\n    // TODO: Add a property to show requests serviced\n    // props isMentor, email\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMode: false,\n            timeSelect: false,\n        }\n        this.goBack = this.goBack.bind(this);\n        this.launchEditMode = this.launchEditMode.bind(this);\n        this.launchTimeSelector = this.launchTimeSelector.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n        // only read from cached state if on same mentor's profile\n        if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState));\n                // set state but overwrite with API call\n            } catch (e) {\n                console.log(\"Could not get fetch state from local storage for\", compName);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.isMentor) {\n            this.componentCleanup();\n            window.removeEventListener('beforeunload', this.componentCleanup);\n        }\n    }\n\n    goBack() {\n        this.setState({\n            editMode : false,\n            timeSelect: false,\n        })\n    }\n\n    launchEditMode(e) {\n        e.preventDefault();\n        this.setState({\n            editMode : true\n        })\n    }\n\n    launchTimeSelector(e) {\n        e.preventDefault();\n        this.setState({\n            timeSelect: true,\n            editMode: true,\n        })\n    }\n    render() {\n        let buttonCollection = \n        <Button onClick={(e) => this.launchEditMode(e)}>\n            <Icon name=\"edit\"/>\n                Edit Profile\n        </Button>\n\n        let mentorButtonCollection = \n        <Grid columns={2}>\n            <Grid.Column>\n                {buttonCollection}\n            </Grid.Column>\n            <Grid.Column>\n                <Button onClick={(e) => this.launchTimeSelector(e)}>\n                    <Icon name=\"calendar\"/>\n                        Change Time Preferences\n                </Button>\n            </Grid.Column>\n        </Grid>\n        let profile = \n        <Grid columns={2}>\n            <Grid.Column>\n                <CardImage\n                name = {this.props.name}\n                image = {this.props.image}\n                />\n                {this.props.viewMode ? null :\n                this.props.isMentor ? \n                    mentorButtonCollection : buttonCollection\n                }\n                <Divider/>\n                {this.props.viewMode ? \n                <Button onClick={() => this.props.goBackToMentorNetwork()}>\n                    <Icon name=\"backward\"/>\n                    Back to network\n                </Button>\n                : null}\n            </Grid.Column>\n            <Grid.Column>\n                <CardDetails\n                    name={this.props.name}\n                    school={this.props.school}\n                    memberSince={this.props.memberSince}\n                    aboutYourself={this.props.aboutYourself}\n                    position={this.props.isMentor ? this.props.position : null }\n                    isMentor={this.props.isMentor}\n                    languages={this.props.languages}\n                    mentorIdForStats={this.props.id}\n                />\n                {this.props.isMentor ? null : this.props.id ? \n                <Segment>\n                    <Tracking menteeId={this.props.id} trackingId={this.props.trackingId}/>\n                </Segment> : null\n                }\n            </Grid.Column>\n        </Grid>\n        return (  \n            <Container>\n            {\n                this.state.editMode ? (\n                    this.state.timeSelect ?\n                    <PreferredTimeEditor\n                        mentorEmail={this.props.email}\n                        goBack={this.goBack}\n                        timeZone={this.props.timeZone}\n                    /> :\n                    <EditProfile\n                        email={this.props.email}\n                        isMentor={this.props.isMentor}\n                        name={this.props.name}\n                        goBack={this.goBack}\n                        // props to populate values for edit form\n                        school={this.props.school}\n                        location={this.props.location}\n                        aboutYourself={this.props.aboutYourself}\n                        // mentors only\n                        position={this.props.position}\n                        major={this.props.major}\n                        zoom_info={this.props.zoom_info}\n                    />\n                ) : profile\n            }\n            </Container>\n          )\n    }\n}\n","import {yellowLight, orangeLight, yellowUltraLight, darkYellow, mediumOrange} from './htmlColorCodes'\n\n\nexport const adminRowPaddingStyle = {\n    'padding': '3px 3px 3px 3px'\n}\n\nexport const adminContentYellowStyle = {\n    'padding': '5px 5px 5px 5px',\n    'background': yellowLight\n}\n\nexport const adminContentOrangeStyle = {\n    'padding': '4px 4px 4px 4px',\n    'background': orangeLight\n}\n\nexport const adminCardStyleYellow = {\n    width: '100%',\n    padding: '5px',\n    margin: '5px',\n    background: yellowUltraLight\n}\n\nexport const messageChatFeed = {\n    'width': '100%',\n    'padding': '5px',\n    'margin': '5px',\n    'overflow-y': 'scroll',\n    'background': yellowUltraLight,\n    'max-height': '300px'\n}\n\nexport const menteeMessage = {\n    width: '80%',\n    padding: '5px',\n    margin: '5px',\n    background: yellowLight,\n    float: 'left'\n}\n\nexport const mentorMessage = {\n    width: '80%',\n    padding: '5px',\n    margin: '5px',\n    background: orangeLight,\n    float: 'right'\n}\n\nexport const buttonStyle1 = {\n    width: '90%',\n    padding: '8px 8px 8px 8px',\n    margin: '3px 3px 3px 3px',\n    background: mediumOrange\n}\n\nexport const buttonStyle2 = {\n    width: '90%',\n    padding: '8px 8px 8px 8px',\n    margin: '3px 3px 3px 3px',\n    background: darkYellow\n}\n\nexport const buttonStyle3 = {\n    width: '90%',\n    padding: '8px 8px 8px 8px',\n    margin: '3px 3px 3px 3px'\n}\n","export const yellowLight = '#FFEBAA'\nexport const orangeLight = '#FFD393'\nexport const yellowUltraLight = '#FDFBDF'\nexport const darkYellow = \"#ECDD09\"\nexport const mediumOrange = \"#FFAA20\"\n","import React from 'react'\nimport { Feed, Divider } from 'semantic-ui-react'\nimport { messageChatFeed, mentorMessage, menteeMessage } from '../../inlineStyles'\nimport { MENTEE, MENTOR } from \"../../magicString\"\n\nexport default class FeedChat extends React.Component {\n    constructor(props){\n        super(props);\n        this.getEvents = this.getEvents.bind(this);\n    }\n    /*\n    format of events:\n        role: role,\n        date: dateString,\n        sender: `${name} (${role})`,\n        message: messageString\n    */\n    getEvents(events) {\n        return events.map(evt => {\n            let event = \n            <Feed.Event>\n                {/* TODO: dateString to be included when in human-readable format \n                <Feed.Label>\n                {evt.dateString}\n                </Feed.Label> */}\n                <Feed.Content>\n                    <Feed.Summary>\n                    {evt.message}\n                    </Feed.Summary>\n                    <Feed.Meta>\n                    <strong>{evt.sender}</strong>\n                    </Feed.Meta>\n                </Feed.Content>\n            </Feed.Event>\n            switch(evt.role){\n                case(MENTEE):\n                    return <div style={menteeMessage}>\n                        {event}\n                        <Divider/>\n                    </div>\n                case(MENTOR):\n                    return <div style={mentorMessage}>\n                        {event}\n                        <Divider/>\n                    </div>\n                default:\n                    return null\n            }\n            \n        })\n    }\n    render(){\n        return (\n        <Feed style={messageChatFeed}>\n            {this.getEvents(this.props.events)}\n        </Feed>\n        )\n    }\n}","// role\nexport const MENTOR = 'mentor';\nexport const MENTEE = 'mentee';\nexport const ADMIN = 'admin';\nexport const SCHOOL_ADMIN = 'school_admin';","import React from 'react'\nimport { Card, Button, Modal, Form, Divider } from 'semantic-ui-react'\nimport { BACKEND } from \"../App\"\nimport swal from \"sweetalert\";\nimport { MENTOR, MENTEE } from \"./../magicString\"\nimport FeedChat from \"./Feed/FeedChat\"\n\nlet MAX_CHARS_MESSAGE = process.env.REACT_APP_MAX_CHARS_MESSAGE || 200;\n\nexport function createMessageEvent(messages, name, role) {\n    const dateLen = 13;\n    let events = messages.map(msg => {\n        let dateString = msg.substring(0, dateLen);\n        let messageString = msg.substring(dateLen + 1);\n        return {\n            role: role,\n            date: dateString,\n            sender: `${name} (${role})`,\n            message: messageString\n        }\n    })\n    return events;\n}\n\nexport default class ScheduleCard extends React.Component {\n    // TODO: Implement cancel and reschedule\n    constructor(props){\n        super(props);\n        this.state = {\n            message: '',\n            modalOpen: false \n        }\n        this.provideFeedback = this.provideFeedback.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getMessageEvents = this.getMessageEvents.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n    getMessageEvents(mentorMessages, menteeMessages){\n        let menteeName = this.props.mentee;\n        let mentorName = this.props.mentor;\n        let taggedMenteeMessages = createMessageEvent(menteeMessages, menteeName, MENTEE);\n        let taggedMentorMessages = createMessageEvent(mentorMessages, mentorName, MENTOR);\n        let allMessageEvents = [...taggedMenteeMessages, ...taggedMentorMessages];\n        allMessageEvents.sort((obj1, obj2) => {\n            if (obj1.dateString > obj2.dateString){\n                return 1\n            } else if (obj1.dateString < obj2.dateString) {\n                return -1\n            }\n            return 0;\n        })\n        return allMessageEvents;\n    }\n    sendMessage(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            requestId: this.props.requestId,\n            message: this.state.message,\n            isMentor: false\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/postMessage`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Message Sent!\",\n                    text: `You just pinged your mentor.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n    provideFeedback(e){\n        e.preventDefault();\n        swal({\n            text: \"What did you like about the call? What could have been better?\",\n            content: \"input\",\n            button: {\n                text: \"Submit!\",\n                closeModal: true,\n            },\n          }).then((feedback) => {\n              let payload = {\n                  requestId: this.props.requestId,\n                  mentee_feedback: feedback\n              }\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/json');\n            headers.append('Accept', 'application/json');\n            fetch(`${BACKEND}/giveFeedback`, {\n                method: 'post',\n                credentials: 'include',\n                headers: headers,\n                body: JSON.stringify(payload)\n            }).then(res => {\n                if (res.status !== 200) {\n                    swal({\n                        title: `Oops!`,\n                        text: \"Something went wrong! Please try again.\",\n                        icon: \"error\",\n                    });\n                } else {\n                    swal({\n                        title: `Thank you for your feedback.`,\n                        text: \"Best of luck! App will now refresh to update appointments.\",\n                        icon: \"success\",\n                    }).then(() => {\n                        window.location.reload();\n                    });\n                }\n            });\n          })\n    }\n    render() {\n        const {time, topic, mentor} = this.props;\n        const cardStyle = {\n            width: '100%',\n            padding: '5px',\n            margin: '5px',\n        }\n        /*\n        States of Join Call Button\n        1. Awaiting Confirmation... --> !confirmed, !done\n        2. Join Video Call --> confirmed, !done\n        3. Call Completed --> done, confirmed\n        4. Call Completed --> !confirmed, done (invalid state)\n        */\n       let buttonText = (this.props.confirmed && !this.props.requestDone) ? 'Join Video Call' : this.props.requestDone ? 'Call Completed' : 'Awaiting Confirmation...';\n        return (\n            <Card style={cardStyle}>\n                <Card.Content>\n                    <Card.Header>Call with: {mentor}</Card.Header>\n                    <Card.Meta>{time}</Card.Meta>\n                    <Card.Description>\n                    You are scheduled for 30 minutes to discuss {topic}\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    <div className='ui two buttons'>\n                    <Button basic color='dark orange'\n                        disabled={!this.props.confirmed || this.props.requestDone}\n                        onClick={() => window.open(this.props.meetingRoom)}\n                    >\n                        {buttonText}\n                    </Button>\n                    <Button\n                        onClick={this.props.requestDone ? this.provideFeedback : null}\n                        basic color='yellow' disabled={!this.props.requestDone}>\n                        Provide Feedback\n                    </Button>\n                    </div>\n                    <Divider/>\n                    <Modal\n                        open={this.state.modalOpen}\n                        trigger={\n                            <Button\n                                onClick={() => {this.setState({modalOpen: true})}}\n                                centered\n                                style={{'width': '100%'}}\n                            >\n                                Chat!\n                            </Button>\n                        }>\n                        <Modal.Header>Your conversation with {mentor}</Modal.Header>\n                        <Modal.Content>\n                            <FeedChat events={this.getMessageEvents(this.props.mentorMessages, this.props.menteeMessages)}/>\n                            <Form onSubmit={this.sendMessage}>\n                            <Form.Field\n                                type=\"text\">\n                                    <label>Message</label>\n                                    <input maxlength={MAX_CHARS_MESSAGE} placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                                </Form.Field>\n                                <Button \n                                    color=\"blue\" \n                                    type='submit'\n                                    disabled={!this.state.message}\n                                >\n                                    Send\n                                </Button>\n                            </Form>\n                        </Modal.Content>\n                        <Modal.Actions>\n                            <Button onClick={() => {this.setState({modalOpen: false})}}>\n                                Done\n                            </Button>\n                        </Modal.Actions>\n                    </Modal>\n                </Card.Content>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Modal, Card, Button, Header, Label, List, Image, Segment } from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\"\nimport { groupByRank } from \"./Tracking\"\nimport {buttonStyle3} from \"../../inlineStyles\"\n\n/*\nprops: menteeId\nhandlerFunction for open/Close Modal\n*/\nexport default class MenteeModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            school: '',\n            ECA: [],\n            collegeShortlist: [],\n            grade: '',\n            image: '',\n            memberSince: '',\n            location: ''\n        }\n        this.getECA = this.getECA.bind(this);\n        this.getCollegesList = this.getCollegesList.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.menteeId) {\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/json');\n            headers.append('Accept', 'application/json');\n            let payload = {\n                menteeId: this.props.menteeId\n            }\n            fetch(`${BACKEND}/getMenteeInfo`, {\n                method: 'post',\n                headers: headers,\n                credentials: 'include',\n                body: JSON.stringify(payload)\n            }).then(async res => {\n                    let resolvedRes = await res;\n                    resolvedRes = await resolvedRes.json()\n                    // tracking info\n                    let {name, ECA, OAlevel, SAT, OtherExams, grade, collegeShortlist, memberSince, location, image, school} = resolvedRes\n                    /*\n                    parse mentee info from resolved Res\n                    */\n                    let ECAparsed = ECA && JSON.parse(ECA)\n                    let CSLparsed = collegeShortlist && JSON.parse(collegeShortlist)\n                    this.setState({\n                        ECA: ECAparsed || [],\n                        OALevel: OAlevel,\n                        SAT: SAT,\n                        OtherExams: OtherExams,\n                        collegeShortlist: CSLparsed || [],\n                        grade: grade,\n                        name: name,\n                        memberSince: memberSince,\n                        image: image,\n                        location,\n                        school: school\n                    })\n            }\n            ).catch(e => console.log(e))\n        }\n    }\n\n    getECA() {\n        if (this.state.ECA && !this.state.ECA.length) {\n            return <Header block>No ECAs added!</Header>\n        }\n        return this.state.ECA && this.state.ECA.map(eca => {\n            return <List.Item>\n                        <Label>\n                            Activity/Achievement: {eca.activityOrAchievement}\n                        </Label>\n                <List.Description>Position/Description: {eca.positionOrDesc}</List.Description>\n                <List.Description>Commitment: {eca.yearsOfCommit}</List.Description>\n            </List.Item>\n        })\n    }\n\n    getCollegesList() {\n        if (this.state.collegeShortlist && !this.state.collegeShortlist.length) {\n            return <Header block>No colleges in shortlist!</Header>\n        }\n        let sortedShortlist = groupByRank(this.state.collegeShortlist)\n        if (!sortedShortlist) {\n            return []\n        }\n        let ranks = Object.keys(sortedShortlist)\n        return ranks.map(rank => {\n            if (!sortedShortlist[rank].length) {\n                return null;\n            }\n            return(\n                <>\n                <Label size={'large'}>{rank}</Label>\n                {sortedShortlist[rank].map( college => {\n                    return (<List.Item>\n                        <>\n                        {/* <Label size={'medium'} image> */}\n                        {college}\n                        {/* </Label> */}\n                        </>\n                    </List.Item>)\n                })}\n                </>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <Modal\n            open={this.state.modalOpen}\n            trigger={\n                <Button\n                    style={buttonStyle3}\n                    onClick={() => {this.setState({modalOpen: true})}}\n                >\n                    View {this.state.name}'s Profile\n                </Button>\n            }>\n            <Modal.Header>{this.state.name}</Modal.Header>\n            <Modal.Content>\n            <Card centered>\n                <Image src={this.state.image} wrapped ui={false} />\n                <Card.Content>\n                <Card.Header>Attends {this.state.school}, in {this.state.grade} grade</Card.Header>\n                <Card.Meta>\n                    <span className='date'>Member since {this.state.memberSince}</span>\n                </Card.Meta>\n                <Card.Meta>\n                    Location: {this.state.location}\n                </Card.Meta>\n                </Card.Content>\n                <Card.Content centered>\n                    <Segment style={{'width': '95%'}}>\n                        <strong><label>Colleges in shortlist:</label> </strong><br/>\n                        {this.getCollegesList()}\n                    </Segment>\n                    <Segment style={{'width': '95%'}}>\n                        <strong><label>Extra-curricular activities:</label></strong>\n                        {this.getECA()}\n                    </Segment>\n                </Card.Content>\n            </Card>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button onClick={() => {this.setState({modalOpen: false})}}>\n                    Close\n                </Button>\n            </Modal.Actions>\n        </Modal>\n        )\n    }\n}","import React from 'react'\nimport { Card, Button, Divider, Modal, Form } from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\"\nimport { convertToViewerTimeZone } from \"../TimezoneAdjustmentHelpers\"\nimport swal from \"sweetalert\";\nimport FeedChat from \"../Feed/FeedChat\"\nimport {createMessageEvent} from \"../ScheduleCard\"\nimport {MENTEE, MENTOR} from \"../../magicString\"\nimport ProfileModal from \"../MenteeView/ProfileModal\"\n\nlet MAX_CHARS_MESSAGE = process.env.REACT_APP_MAX_CHARS_MESSAGE || 200;\n\nexport default class CallCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            modalOpen: false,\n            modalProfileViewOpen: false,\n            menteeId: this.props.menteeId\n        }\n        this.handleConfirm = this.handleConfirm.bind(this);\n        this.handleMarkAsComplete = this.handleMarkAsComplete.bind(this);\n        this.handleDismiss = this.handleDismiss.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getMessageEvents = this.getMessageEvents.bind(this);\n    }\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n    getMessageEvents(mentorMessages, menteeMessages){\n        let menteeName = this.props.mentee.name;\n        let mentorName = this.props.mentorName;\n        let taggedMenteeMessages = createMessageEvent(menteeMessages, menteeName, MENTEE);\n        let taggedMentorMessages = createMessageEvent(mentorMessages, mentorName, MENTOR);\n        let allMessageEvents = [...taggedMenteeMessages, ...taggedMentorMessages];\n        allMessageEvents.sort((obj1, obj2) => {\n            if (obj1.dateString > obj2.dateString){\n                return 1\n            } else if (obj1.dateString < obj2.dateString) {\n                return -1\n            }\n            return 0;\n        })\n        return allMessageEvents;\n    }\n    sendMessage(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            requestId: this.props.requestId,\n            message: this.state.message,\n            isMentor: true\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/postMessage`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Message Sent!\",\n                    text: `You just pinged your mentor.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    handleConfirm(e) {\n        e.preventDefault();\n        let confirmPayload = {\n            requestId: this.props.requestId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/confirmRequest`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify(confirmPayload)\n        }).then(res => {\n            if (res.status !== 200) {\n                console.log(\"Request failed\")\n            } else {\n                console.log(\"received response\", res.json())\n                swal({\n                    title: `You've confirmed a call with ${this.props.mentee.name}`,\n                    text: \"App will now refresh to reflect view current state of appointments.\",\n                    icon: \"success\",\n                  }).then(() => {\n                    window.location.reload();\n                  });\n            }\n        });\n    }\n\n    handleMarkAsComplete(e) {\n        e.preventDefault();\n        let confirmPayload = {\n            requestId: this.props.requestId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/markRequestDone`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify(confirmPayload)\n        }).then(res => {\n            if (res.status !== 200) {\n                console.log(\"Request failed\")\n            } else {\n                console.log(\"received response\", res.json())\n                swal({\n                    title: `Congratulations on completing the request!`,\n                    text: \"App will now refresh to reflect view current state of appointments.\",\n                    icon: \"success\",\n                  }).then(() => {\n                    window.location.reload();\n                  });\n            }\n        });\n    }\n\n    handleDismiss(e) {\n        e.preventDefault();\n        let confirmPayload = {\n            requestId: this.props.requestId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/deleteRequest`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify(confirmPayload)\n        }).then(res => {\n            if (res.status !== 200) {\n                swal({\n                    title: `Oops!`,\n                    text: \"Something went wrong! Please try again.\",\n                    icon: \"error\",\n                  });\n            } else {\n                swal({\n                    title: `Successfully dimissed request.`,\n                    text: \"App will now refresh to reflect view current state of appointments.\",\n                    icon: \"success\",\n                  }).then(() => {\n                    window.location.reload();\n                  });\n            }\n        });\n    }\n\n    render() {\n        const {mentee, topic, time, mentorTimeZone} = this.props;\n        const cardStyle ={\n            width: '100%',\n            padding: '5px',\n            margin: '5px',\n        }\n        let school = mentee.schoolCustom ? mentee.schoolCustom : mentee.school ? mentee.school.name : 'None listed.'\n        return (\n            // TODO: update confirm/dismiss with backend calls\n            // TODO: adjustTime to mentor's timeZone\n            <Card style={cardStyle}>\n                <Card.Content>\n                    <Card.Header>Request from {mentee.name}</Card.Header>\n                    <Card.Meta>Topic {topic} at { convertToViewerTimeZone(time, mentorTimeZone) }</Card.Meta>\n                    <Card.Meta>Message from mentee: { this.props.mentee_intro }</Card.Meta>\n                    <Card.Description>\n                        {mentee.name} attends {school} and is from {mentee.location}\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    <div className='ui two buttons'>\n                    <Button \n                        onClick={(e) => this.props.confirmed ? window.open(this.props.meetingRoom) : this.handleConfirm(e)}\n                        basic color='dark orange'>\n                        {this.props.confirmed ? 'Join Video Call' : 'Confirm'}\n                    </Button>\n                    {/* TODO: Include ability to cancel requests for mentors */}\n                    <Button\n                        onClick={(e) => this.props.confirmed ? this.handleMarkAsComplete(e) : this.handleDismiss(e)}\n                        basic color='yellow'>\n                        {this.props.confirmed ? 'Mark as Complete' : 'Dismiss'}\n                    </Button>\n                    </div>\n                    <Divider/>\n                    <div className='ui two buttons'>\n                        <Modal\n                            open={this.state.modalOpen}\n                            trigger={\n                                <Button\n                                    onClick={() => {this.setState({modalOpen: true})}}\n                                >\n                                    Chat!\n                                </Button>\n                            }>\n                            <Modal.Header>Your conversation with {mentee.name}</Modal.Header>\n                            <Modal.Content>\n                                <FeedChat events={this.getMessageEvents(this.props.mentorMessages, this.props.menteeMessages)}/>\n                                <Form onSubmit={this.sendMessage}>\n                                <Form.Field\n                                    type=\"text\">\n                                        <label>Message</label>\n                                        <input maxlength={MAX_CHARS_MESSAGE} placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                                    </Form.Field>\n                                    <Button \n                                        color=\"blue\" \n                                        type='submit'\n                                        disabled={!this.state.message}\n                                    >\n                                        Send\n                                    </Button>\n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => {this.setState({modalOpen: false})}}>\n                                    Done\n                                </Button>\n                            </Modal.Actions>\n                        </Modal>\n                    {/* TODO: Include ability to cancel requests for mentors */}\n                        <ProfileModal menteeId={this.state.menteeId}/>\n                    </div>\n                    {/* <Modal\n                        open={this.state.modalOpen}\n                        trigger={\n                            <Button\n                                onClick={() => {this.setState({modalOpen: true})}}\n                                centered\n                                style={{'width': '100%'}}\n                            >\n                                Chat!\n                            </Button>\n                        }>\n                        <Modal.Header>Your conversation with {mentee.name}</Modal.Header>\n                        <Modal.Content>\n                            <FeedChat events={this.getMessageEvents(this.props.mentorMessages, this.props.menteeMessages)}/>\n                            <Form onSubmit={this.sendMessage}>\n                            <Form.Field\n                                type=\"text\">\n                                    <label>Message</label>\n                                    <input maxlength={MAX_CHARS_MESSAGE} placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                                </Form.Field>\n                                <Button \n                                    color=\"blue\" \n                                    type='submit'\n                                    disabled={!this.state.message}\n                                >\n                                    Send\n                                </Button>\n                            </Form>\n                        </Modal.Content>\n                        <Modal.Actions>\n                            <Button onClick={() => {this.setState({modalOpen: false})}}>\n                                Done\n                            </Button>\n                        </Modal.Actions>\n                    </Modal> */}\n                </Card.Content>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Card } from 'semantic-ui-react'\nimport CallCard from './CallCard';\n\nexport default class Backlog extends React.Component {\n    constructor(props){\n        super(props);\n        this.renderRequestCards = this.renderRequestCards.bind(this);\n    }\n\n    renderRequestCards(calls) {\n        if (calls.length) {\n            return calls.map(call => {\n                return (\n                    <CallCard\n                        mentorTimeZone={this.props.mentorTimeZone}\n                        mentorName={this.props.mentorName}\n                        topic={call.topic}\n                        time={call.dateTime}\n                        requestId={call.id}\n                        meetingRoom={call.mentor.zoom_info}\n                        mentee={call.mentee}\n                        confirmed={this.props.confirmed}\n                        mentee_intro={call.mentee_intro}\n                        menteeMessages={call.menteeMessages || []}\n                        mentorMessages={call.mentorMessages || []}\n                        menteeId = {call.mentee.id}\n                    />\n                )\n            })\n        }\n        const cardStyle ={\n            width: '100%',\n            padding: '5px',\n            margin: '5px',\n        }\n        let header = this.props.confirmed? `No confirmed calls!` : `No requests!`;\n        let meta = this.props.confirmed? `This is where confirmed calls will appear` : `This is where new call requests from mentees will appear...`;\n        let desc = this.props.confirmed? `Please confirm calls you want to accept from backlog.` : `Consider editing your time availabilities if you're really itching to consult a mentee!`;\n        return (\n            <Card style={cardStyle}>\n                <Card.Content>\n                    <Card.Header>{header}</Card.Header>\n                    <Card.Meta>{meta}</Card.Meta>\n                    <Card.Description>\n                    {desc}\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        )\n    }\n\n    render() {\n        return (  \n            <Container>\n                {this.renderRequestCards(this.props.calls)}\n            </Container>\n          )\n    }\n}\n","import React, { Component } from 'react'\nimport { Search, Grid} from 'semantic-ui-react'\n\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Search \n            open={false}\n            onSearchChange={this.props.onSearchMode}\n            placeholder='Search by key words...'\n            value={this.props.searchValue}\n          />\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}","import React from 'react'\nimport { Grid, Card, Image, Button, Icon, Divider } from 'semantic-ui-react'\n\nexport default class MentorNetworkCard extends React.Component {\n    render() {\n        const {id, name, image, school, position, location} = this.props;\n        const cardStyle ={\n            width: '100%',\n            padding: '5px',\n            margin: '5px',\n        }\n        let imageAspect = {\n            'width': '200px',\n            'height': '150px',\n            'object-fit': 'cover'\n        }\n        return (\n            <Card centered={true} style={cardStyle}>\n                <Grid columns={3}>\n                    <Grid.Column width={4}>\n                        <Image style={imageAspect} src={image} />\n                    </Grid.Column>\n                    <Grid.Column width={9}>\n                        <Card.Content>\n                        <Card.Header>{name}</Card.Header>\n                        <Card.Description>\n                            School: {school}\n                        </Card.Description>\n                        <Card.Description>\n                            Position: {position}\n                        </Card.Description>\n                        <Card.Description>\n                            Location: {location}\n                        </Card.Description>\n                        </Card.Content>\n                    </Grid.Column>\n                    <Grid.Column width={3}>\n                        {this.props.viewedAsMentor? null : \n                        <div>\n                            <Grid.Row>\n                                <Button disabled={!this.props.hasTimesAvailable} onClick={() => this.props.pickMentor(id)} class=\"ui button\">Book!</Button>\n                            </Grid.Row>\n                            <Divider/>\n                        </div>\n                        }\n                        <Grid.Row>\n                            <Button  class=\"ui button\" value={id} onClick={(this.props.viewProfile)}>\n                                <Icon name='user' />\n                                Go to Profile\n                            </Button>\n                        </Grid.Row>\n                    </Grid.Column>\n                </Grid>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid, Divider, Dropdown, Button } from 'semantic-ui-react'\nimport SearchBar from './SearchBar';\nimport MentorNetworkCard from './MentorNetworkCard';\nimport { BACKEND } from \"../App\";\nimport { PREFERRED_TOPICS } from \"./SignUp/SignUpMentor\";\nlet preferredTopicsOptions = PREFERRED_TOPICS.map(val => {\n    return {key: val, text: val, value: val}\n});\n\nconst compName = 'MentorNetwork_LS';\n\nexport default class MentorNetwork extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mentors: [],\n            searchMode: false,\n            searchTerms: '',\n            searchTopic: '',\n        }\n        this.updateSearchTerms = this.updateSearchTerms.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.handleChangeTopic = this.handleChangeTopic.bind(this);\n        this.viewProfile = this.viewProfile.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getAllMentors`, {\n            method: 'get',\n            credentials: 'include',\n            headers: headers,\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                mentors: resolvedRes && resolvedRes.mentors\n            });\n        });\n    }\n\n    viewProfile(e, {value}) {\n        e.preventDefault();\n        let mentorToLift = this.state.mentors.find(mentor => {return mentor.id === value});\n        this.props.viewMentorProfile(mentorToLift);\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    updateSearchTerms(e, searchObject) {\n        let searchTerms = searchObject.value\n        e.preventDefault();\n        if (!searchTerms) {\n            this.setState({\n                searchMode: false,\n                searchTerms: searchTerms,\n            })\n        } else {\n            this.setState({\n                searchTerms: searchTerms,\n                searchMode: true\n            })\n        }\n    }\n\n    getBagofWords(mentor) {\n        return [mentor.name, mentor.school, mentor.position, mentor.location];\n    }\n\n    handleChangeTopic(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            searchTopic: value,\n            searchMode: true\n        })\n    }\n\n    clearSearch(e) {\n        e.preventDefault();\n        this.setState({\n            searchMode: false,\n            searchTerms: '',\n            searchTopic: '',\n        })\n    }\n\n    filterResults(MentorObjects) {\n        // eslint-disable-next-line\n        if (this.state.searchTerms) {\n            return MentorObjects.filter(mentor => {\n                let bagOfWords = this.getBagofWords(mentor);\n                let searchTerms = this.state.searchTerms;\n                for (let i = 0; i < bagOfWords.length; i++) {\n                    if (bagOfWords[i].toLowerCase().includes(searchTerms.toLowerCase())) {\n                        return true;\n                    }\n                }\n            })\n        } else if (this.state.searchTopic) {\n            return MentorObjects.filter(mentor => {return mentor.preferredTopics.includes(this.state.searchTopic)})\n        }\n    }\n\n    renderUserCards(MentorObjects) {\n        // removes mentor from list!\n        if (this.props.isMentor) (\n            MentorObjects = MentorObjects.filter(mentor => {\n                return mentor.id !== this.props.myId\n            })\n        )\n        //TODO: filter by hasAvailabilities here?\n        MentorObjects = MentorObjects.filter(mentor => {\n            return mentor.approved\n        });\n        return MentorObjects.map(mentor => {\n            let hasAvailabilities = mentor.preferredTimes[0].length > 0\n            return (\n                <MentorNetworkCard\n                    id={mentor.id}\n                    name={mentor.name}\n                    school={mentor.school}\n                    position={mentor.position}\n                    location={mentor.location}\n                    image={mentor.image}\n                    pickMentor={this.props.pickMentor}\n                    viewProfile={this.viewProfile}\n                    viewedAsMentor={this.props.isMentor}\n                    hasTimesAvailable={hasAvailabilities}\n                />\n            )\n        })\n    }\n\n    render() {\n        let mentorText = `That includes YOU!`\n        let menteeText = ``;\n        return (  \n            <Container>\n                <Grid columns={2}>\n                    <Grid.Column width={10}>\n                        There as {this.state.mentors.length} Mentors currently in network. {this.props.isMentor? mentorText : menteeText} Only verified mentors will be listed.\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <Grid.Row>\n                            <SearchBar\n                                onSearchMode={this.updateSearchTerms}\n                                searchValue={this.state.searchTerms}\n                            />\n                        </Grid.Row>\n                        <Divider/>\n                        <Grid.Row>\n                            <Dropdown placeholder='Search by topic' fluid selection options={preferredTopicsOptions} onChange={this.handleChangeTopic} name=\"searchTopic\" value={this.state.searchTopic}/>\n                        </Grid.Row>\n                        <Divider/>\n                        <Grid.Row>\n                            <Button onClick={this.clearSearch}>\n                                Clear Search\n                            </Button>\n                        </Grid.Row>\n                    </Grid.Column>\n                </Grid>\n                <Container>\n                    {this.state.searchMode ? \n                    this.renderUserCards(this.filterResults(this.state.mentors)) : this.renderUserCards(this.state.mentors)}\n                </Container>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu, Segment } from 'semantic-ui-react'\nimport Profile from '../Profile'\nimport { BACKEND } from \"../../App\"\nimport Backlog from \"./Backlog\";\nimport MentorNetwork from \"../MentorNetwork\";\n\n// TODO: Deprecated, remove\n// import ConfirmedCalls from \"./ConfirmedCalls\"\n\nexport const MY_PROFILE = 'My Profile';\nexport const BACKLOG = 'Backlog';\nexport const CONFIRMED_CALLS = 'Confirmed Calls';\nexport const MENTOR_NETWORK = 'Mentor Network';\nexport const MENTOR_PROFILE = 'Mentor Profile'\n\nexport default class NavBarMentor extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: MY_PROFILE,\n            data: {},\n            requests: null,\n        }\n        this.getRequests = this.getRequests.bind(this);\n        this.getConfirmedCalls = this.getConfirmedCalls.bind(this);\n        this.getBacklog = this.getBacklog.bind(this);\n        this.viewMentorProfile = this.viewMentorProfile.bind(this);\n        this.goBackToMentorNetwork = this.goBackToMentorNetwork.bind(this);\n    }\n\n    goBackToMentorNetwork() {\n        this.setState({\n            activeItem: MENTOR_NETWORK\n        })\n    }\n\n    viewMentorProfile(value) {\n        this.setState({\n            activeItem: MENTOR_PROFILE,\n            mentorFetchedForView: value,\n        })\n    }\n\n    getConfirmedCalls() {\n        return this.state.requests.filter(request => request.confirmed && !request.done)\n    }\n\n    getBacklog() {\n        return this.state.requests.filter(request => !request.confirmed)\n    }\n\n    async getRequests(mentorId) {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        await fetch(`${BACKEND}/getRequests`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify({\n                mentorId: mentorId\n            })\n        }).then(async res => {\n            let resolvedRes = await res;\n            if (res.status !== 200) {\n                console.log(\"Request getRequests failed\");\n            } else {\n                resolvedRes = await resolvedRes.json()\n                this.setState({\n                    requests: resolvedRes\n                })\n            }\n        });\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            data: this.props.payload.mentor\n        }, async () => {\n            await this.getRequests(this.state.data.id)\n        })\n\n    }\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    renderNavSelection() {\n        switch(this.state.activeItem) {\n            case MY_PROFILE:\n                return <Profile\n                    id={this.state.data.id || this.props.payload.mentor.id} // from state or props\n                    email={this.state.data.email} //for profile editing purposes\n                    image={this.state.data.image}\n                    name={this.state.data.name}\n                    school={this.state.data.school}\n                    memberSince={this.state.data.memberSince}\n                    aboutYourself={this.state.data.aboutYourself}\n                    isMentor={true}\n                    position={this.state.data.position}\n                    major={this.state.data.major}\n                    location={this.state.data.location}\n                    timeZone={this.state.data.timeZone}\n                    zoom_info={this.state.data.zoom_info}\n                    languages={this.state.data.languages}\n                />\n            case BACKLOG:\n                return <Backlog\n                    calls = {this.getBacklog()}\n                    mentorTimeZone = {this.state.data.timeZone}\n                    confirmed = {false}\n                    mentorName={this.state.data.name}\n                />\n            case CONFIRMED_CALLS:\n                return <Backlog\n                    calls = {this.getConfirmedCalls()}\n                    mentorTimeZone = {this.state.data.timeZone}\n                    confirmed = {true}\n                    mentorEmail={this.state.data.email}\n                    mentorName={this.state.data.name}\n                />\n            case MENTOR_NETWORK:\n                return <MentorNetwork\n                    pickMentor={this.handleNewScheduleWithMentor}\n                    viewMentorProfile={this.viewMentorProfile}\n                    myId={this.props.payload && this.props.payload.mentor.id}\n                    isMentor={true}\n                    />\n            case MENTOR_PROFILE:\n                return <Profile\n                    id={this.state.mentorFetchedForView.id}\n                    image={this.state.mentorFetchedForView.image}\n                    name={this.state.mentorFetchedForView.name}\n                    school={this.state.mentorFetchedForView.school}\n                    memberSince={this.state.mentorFetchedForView.memberSince}\n                    aboutYourself={this.state.mentorFetchedForView.aboutYourself}\n                    position={this.state.mentorFetchedForView.position}\n                    major={this.state.mentorFetchedForView.major}\n                    location={this.state.mentorFetchedForView.location}\n                    timeZone={this.state.mentorFetchedForView.timeZone}\n                    languages={this.state.mentorFetchedForView.languages}\n                    viewMode={true}\n                    isMentor={true}\n                    goBackToMentorNetwork={this.goBackToMentorNetwork}\n                />\n            default:\n                return null\n        }\n    }\n\n    render() {\n        const { activeItem } = this.state.activeItem;\n        return (\n        <div>\n            <Menu pointing>\n                <Menu.Item name={MY_PROFILE} active={activeItem === MY_PROFILE} onClick={this.handleItemClick} />\n                <Menu.Item\n                    name={MENTOR_NETWORK}\n                    active={activeItem === MENTOR_NETWORK}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={BACKLOG}\n                    active={activeItem === BACKLOG}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={CONFIRMED_CALLS}\n                    active={activeItem === CONFIRMED_CALLS}\n                    onClick={this.handleItemClick}\n                />\n                {/* <Menu.Item\n                    name={MY_OFFICE}\n                    active={activeItem === MY_OFFICE}\n                    onClick={this.handleItemClick}\n                /> */}\n                </Menu>\n            <Segment>\n                {this.renderNavSelection()}\n            </Segment>\n        </div>\n        )\n    }\n}\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Card } from 'semantic-ui-react'\nimport ScheduleCard from './ScheduleCard';\nimport { BACKEND } from \"../App\"\nimport { convertToViewerTimeZone } from \"./TimezoneAdjustmentHelpers\"\n\nexport default class Schedule extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            schedules: [],\n            menteeId: null,\n        }\n        this.renderScheduleCards = this.renderScheduleCards.bind(this);\n    }\n    \n    // TODO: use BACKEND to list confirmed calls\n    componentDidMount() {\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        this.setState({\n            menteeId: this.props.menteeId\n        }, async () => \n            await fetch(`${BACKEND}/getAllRequestsForMentee`, {\n                method: 'post',\n                credentials: 'include',\n                headers: headers,\n                body: JSON.stringify({\n                    menteeId: this.props.menteeId,\n                })\n            }).then(async res => {\n                let resolvedRes = await res;\n                if (resolvedRes.status !== 200) {\n                    console.log(\"Request to get mentee schedules was not successful\")\n                } else {\n                    resolvedRes = await res.json()\n                    this.setState({\n                        schedules: resolvedRes\n                    })\n                }\n            })\n        );\n    }\n\n    /**\n     * States of calls on mentees side X = show\n     * STATES -->\n     * not confirmed, no feedback, not done X\n     * confirmed, no feedback, not done X\n     * confirmed, no feedback, done X\n     * confirmed, feedback, done\n     */\n    renderScheduleCards() {\n        let allSchedules = this.state.schedules && this.state.schedules.filter(call => {\n            return (!call.feedback_given);\n        });\n        if (allSchedules.length) {\n            return allSchedules.map(request => {\n                return (\n                    <ScheduleCard\n                        time={convertToViewerTimeZone(request.dateTime, request.mentee.timeZone)}\n                        topic={request.topic}\n                        mentor={request.mentor.name}\n                        mentee={request.mentee.name}\n                        requestId={request.id}\n                        meetingRoom={request.mentor.zoom_info}\n                        requestDone={request.done}\n                        confirmed={request.confirmed}\n                        mentorMessages={request.mentorMessages || []}\n                        menteeMessages={request.menteeMessages || []}\n                    /> \n                )\n            })\n        }\n        const cardStyle ={\n            width: '100%',\n            padding: '5px',\n            margin: '5px',\n        }\n        return (\n            <Card style={cardStyle}>\n                <Card.Content>\n                    <Card.Header>No Scheduled Calls Yet!</Card.Header>\n                    <Card.Meta>Try booking an appointment with one of our mentors...</Card.Meta>\n                    <Card.Description>\n                    There may just be 30 minutes between you and the next chapter of your life!\n                    </Card.Description>\n                </Card.Content>\n            </Card>\n        )\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.renderScheduleCards()}\n            </Container>\n          )\n    }\n}\n","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Message, Dropdown, Button, Grid, Form } from 'semantic-ui-react';\nimport { BACKEND } from \"../App\"\nimport swal from \"sweetalert\";\nimport { adjustTimeForStorage } from './TimezoneAdjustmentHelpers';\n\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\n// TODO: add a table that lists all times, has search, and pagination\n\n// has props mentorsByTopic, selectedTopics, menteeId, menteeTimeZone\nexport default class TimeSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timesOptions: [],\n            timeSelection: [],\n            submitting: false,\n        }\n        this.handleChangeTime = this.handleChangeTime.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            submitting: true,\n        })\n        let payload = {\n            times: this.state.timeSelection,\n            topics: this.props.topics\n        };\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        await fetch(`${BACKEND}/addRequests`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify(payload)\n        }).then(async res => {\n            if (res.status===200){\n                swal({\n                    title: \"Thanks!\",\n                    text: \"Your submission has been received.\",\n                    icon: \"success\",\n                });\n            } else {\n                swal({\n                    title: \"Yikes!\",\n                    text: \"Something went wrong, please try again.\",\n                    icon: \"error\",\n                });\n            }\n        });\n    }\n\n    handleChangeTime(e, {value}) {\n        // check async await pattern, nest as callbacks if not working\n        e.preventDefault();\n        this.setState({\n            timeSelection: value,\n        },() => {\n        })\n    }\n\n    componentDidMount() {\n        let allTimeObjects = this.props.mentorsByTopic && this.props.mentorsByTopic.map(mentor => {\n            return mentor.preferredTimes.map(time => {\n                let menteeAdjustedTime = adjustTimeForStorage(time, this.props.menteeTimeZone);\n                return menteeAdjustedTime.map(menteeAdjustedTimeSlot => {return {key: `${menteeAdjustedTimeSlot},${mentor.id},${this.props.menteeId}`, text: menteeAdjustedTimeSlot, value: `${menteeAdjustedTimeSlot},${mentor.id},${this.props.menteeId}`}})\n            })\n        })\n        this.setState({\n            timesOptions : allTimeObjects.flat().flat() || []\n        })\n    }\n    render() {\n        return (\n            <div>\n                <Message\n                    style= {messageStyle}\n                    attached\n                    centered\n                    header=\"Select the times that work for you.\"\n                    content=\"We will match you to a mentor.\"\n                />\n                <Grid>\n                        <Grid.Column centered>\n                        <Grid.Row>\n                        <Form >\n                            <Form.Field>\n                                <Dropdown placeholder='Preferred Times' fluid multiple selection options={this.state.timesOptions} onChange={this.handleChangeTime} name=\"preferredTimes\"/>\n                            </Form.Field>\n                            <Grid.Row>\n                                <Button loading = {this.state.submitting} onClick={this.handleSubmit}>Submit</Button>\n                            </Grid.Row>\n                            </Form>\n                            </Grid.Row>\n                        </Grid.Column>\n                    </Grid>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Grid, Form, Message, Button, Dropdown } from 'semantic-ui-react'\nimport {ESSAY_BRAINSTORM, ESSAY_CRITIQUE, ECA_STRATEGY, COLLEGE_SHORTLISTING, FINANCIAL_AID_MATTERS, GENERAL_CONSULTATION} from \"../topics\"\nimport {BACKEND} from \"../App\"\nimport TimeSelector from \"./TimeSelector\"\nimport swal from \"sweetalert\";\n\nconst TOPIC_OPTIONS = [ECA_STRATEGY, ESSAY_CRITIQUE, ESSAY_BRAINSTORM, COLLEGE_SHORTLISTING, FINANCIAL_AID_MATTERS, GENERAL_CONSULTATION];\nlet topicsOptions = TOPIC_OPTIONS.map(val => {\n    return {key: val, text: val, value: val}\n})\n\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\nexport default class ScheduleForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedTopics: [],\n            selectTimes: false,\n            mentorsByTopic: [],\n        }\n        this.handleChangeTopic = this.handleChangeTopic.bind(this);\n        this.selectTimes = this.selectTimes.bind(this);\n        this.getMentorsByTopic = this.getMentorsByTopic.bind(this);\n    }\n\n    async selectTimes(e) {\n        if (e) {e.preventDefault()};\n        await this.getMentorsByTopic();\n        if (this.state.selectedTopics.length !== 0) {\n            this.setState({\n                selectTimes: !this.state.selectTimes\n            })\n        } else {\n            swal({\n                title: \"Slow down there!\",\n                text: \"Please fill in all fields to continue.\",\n                icon: \"warning\",\n            });\n        }\n    }\n\n    handleChangeTopic(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            selectedTopics: value\n        })\n    }\n\n    /*\n    TODO: Adjust backend getMentorsByTopic(Union/Intersection) to determine if all matching mentors are returned\n    */\n    async getMentorsByTopic() {\n        let payload = {requestedTopics: this.state.selectedTopics};\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        await fetch(`${BACKEND}/getMatchingMentorsByTopic`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify(payload)\n        }).then(async res => {\n            let resolvedRes = await res.json()\n            if (res.status===200){\n                this.setState({\n                    mentorsByTopic: resolvedRes\n                })\n            } else {\n                console.log(\"res rejected\")\n            }\n        });\n    }\n\n    render() {\n    return (\n        <div>\n            {\n                this.state.selectTimes? <TimeSelector \n                    mentorsByTopic = {this.state.mentorsByTopic}\n                    topics = {this.state.selectedTopics}\n                    menteeId = {this.props.menteeId}\n                    menteeTimeZone = {this.props.menteeTimeZone}\n                /> : \n                <div>\n                    <Message\n                        style= {messageStyle}\n                        attached\n                        centered\n                        header=\"Select topics you'd like to speak about.\"\n                        content=\"We will show you times that we can accommodate you for.\"\n                    />\n                    <Grid>\n                        <Grid.Column centered>\n                        <Grid.Row>\n                        <Form >\n                            <Form.Field>\n                            <Dropdown placeholder='Preferred Topics' fluid multiple selection options={topicsOptions} onChange={this.handleChangeTopic} name=\"preferredTopics\"/>\n                            </Form.Field>\n                            <Grid.Row>\n                                <Button onClick={this.selectTimes}>Select preferred times</Button>\n                            </Grid.Row>\n                            </Form>\n                            </Grid.Row>\n                        </Grid.Column>\n                    </Grid>\n                </div>\n            }\n        </div>)\n    }\n}","import React, { Component } from 'react'\nimport { Grid, Form, Container, Message, Button, Dropdown } from 'semantic-ui-react'\nimport _ from 'lodash'\nimport {BACKEND} from \"../App\"\nimport { convertToViewerTimeZone } from './TimezoneAdjustmentHelpers';\nimport swal from \"sweetalert\";\n\nexport default class ScheduleFormMentorPicked extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            topicSelection: '',\n            timeSelection: '',\n            mentee_intro: '',\n            mentor: null,\n            topicOptions: [],\n            timeOptions: [],\n            submitting: false,\n        }\n        this.handleChangeTopic = this.handleChangeTopic.bind(this);\n        this.handleChangeTime = this.handleChangeTime.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChangeIntro = this.handleChangeIntro.bind(this);\n    }\n\n    componentDidMount() {\n    //TODO: use this.props.mentorId to get mentor info from backend\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getMentorById`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify({\n                id: this.props.mentorId\n            })\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            console.log(resolvedRes)\n            this.setState({\n                mentor: resolvedRes\n            });\n        }).then(() => {\n            // TODO: store request time as GMT-free\n            this.setState({\n                topicOptions:  _.map(this.state.mentor && this.state.mentor.preferredTopics, option => ({\n                    key: option,\n                    text: option,\n                    value: option\n                }))\n            },() => {\n                let menteeTimeObjects = this.state.mentor && this.state.mentor.preferredTimes[0] && this.state.mentor.preferredTimes[0].map(\n                        time => {\n                            return {\n                                gmtFreeTime: time,\n                                viewTime: convertToViewerTimeZone(time, this.props.menteeTimeZone)\n                            }\n                        }\n                    );\n                this.setState({\n                    timeOptions: _.map(menteeTimeObjects, option => ({\n                        key: option.viewTime,\n                        text: option.viewTime,\n                        value: option.gmtFreeTime\n                    }))\n                })\n            })\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            submitting: true,\n        },() => {\n            let newRequestPayload = {\n                dateTime: this.state.timeSelection,\n                requestorId: this.props.menteeId,\n                topic: this.state.topicSelection,\n                mentorId: this.state.mentor.id,\n                mentee_intro: this.state.mentee_intro,\n            }\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/json');\n            headers.append('Accept', 'application/json');\n            fetch(`${BACKEND}/newRequestByMentor`, {\n                method: 'post',\n                credentials: 'include',\n                headers: headers,\n                body: JSON.stringify(newRequestPayload)\n            }).then(res => {\n                if (res.status !== 200) {\n                    swal({\n                        title: `Oops!`,\n                        text: \"Something went wrong! Please try again.\",\n                        icon: \"error\",\n                    });\n                    this.setState({\n                        submitting: false,\n                    })\n                } else {\n                    this.setState({\n                        submitting: false,\n                    },() => {\n                        swal({\n                            title: `You're all set!`,\n                            text: \"You've successfully requested a call! Keep an eye out on your email for updates.\",\n                            icon: \"success\",\n                        }).then(() => {\n                            this.props.goBackToMentorNetwork();\n                        })\n                    })\n                }\n            });\n        })\n        // send updated information\n        /*\n        This function might be better passed in as prop from NavBar to update schedule when populated with new entry\n        */\n    }\n    handleChangeTopic(e, {value}) {\n        // check async await pattern, nest as callbacks if not working\n        e.preventDefault();\n        this.setState({\n            topicSelection: value,\n        })\n    }\n    handleChangeTime(e, {value}) {\n        // check async await pattern, nest as callbacks if not working\n        e.preventDefault();\n        this.setState({\n            timeSelection: value,\n        })\n    }\n    handleChangeIntro(e) {\n        // check async await pattern, nest as callbacks if not working\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    render() {\n        let gridStyle = {\n            width: '100%',\n            margin: '20px',\n        }\n        // consider adding error attribute to incomplete fields, but for now disable the submit button\n        return(\n            <Container>\n                  <Message>\n                    <Message.Header>Scheduling form</Message.Header>\n                    <p>\n                    {`Your call will be scheduled with ${this.state.mentor && this.state.mentor.name}. Times are displayed in your timezone.`}\n                    </p>\n                </Message>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group widths='equal'>\n                        <Grid rows={5} style={gridStyle}>\n                        <Grid.Row>\n                            <Form.Field>\n                                <Dropdown placeholder='Topic' fluid selection options={this.state.topicOptions} onChange={this.handleChangeTopic} name=\"preferredTopics\"/>\n                            </Form.Field>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Form.Field>\n                                <Dropdown placeholder='Times' fluid selection options={this.state.timeOptions} onChange={this.handleChangeTime} name=\"preferredTopics\"/>\n                            </Form.Field>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Form.Field\n                            >\n                                <label>Briefly tell us what you want to speak about.</label>\n                                <input placeholder='Your intro for the call...' name=\"mentee_intro\" maxLength = \"500\" onChange={this.handleChangeIntro} />\n                            </Form.Field>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Button \n                                disabled={!this.state.timeSelection \n                                    || !this.state.topicSelection} \n                                type='submit'>Submit\n                            </Button>\n                        </Grid.Row>\n                        </Grid>\n                    </Form.Group>      \n            </Form>\n          </Container>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Menu, Segment } from 'semantic-ui-react'\nimport Profile from './Profile'\nimport MentorNetwork from './MentorNetwork';\nimport Schedule from './Schedule';\nimport ScheduleForm from './ScheduleForm';\nimport ScheduleFormMentorPicked from './ScheduleFormMentorPicked';\n\nconst compName = 'NavBarMentee_LS';\n\nexport const MY_PROFILE = 'My Profile';\nexport const MENTOR_NETWORK = 'Mentor Network';\nexport const SCHEDULINGS = 'Schedulings';\nexport const MENTOR_PROFILE = 'Mentor Profile'\nexport const NEW_CALL = 'New Call'\n\n//TODO: adapt to mentee login model --> currently copied from mentor login\nexport default class NavBarMentee extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: MY_PROFILE,\n            data: {},\n            schedule: null,\n            mentorPicked: false,\n            mentorId: '',\n            mentorPickedForView: null,\n        }\n        this.handleNewSchedule = this.handleNewSchedule.bind(this);\n        this.handleNewScheduleWithMentor = this.handleNewScheduleWithMentor.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.viewMentorProfile = this.viewMentorProfile.bind(this);\n        this.goBackToMentorNetwork = this.goBackToMentorNetwork.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n            if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState));\n            } catch (e) {\n                console.log(\"Could not get fetch state from local storage for\", compName);\n            }\n        }\n        this.setState({\n            data: this.props.payload.mentee\n        })\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    handleNewSchedule(e) {\n        e.preventDefault();\n        this.setState({\n            activeItem: NEW_CALL,\n            mentorPicked: false,\n            mentorId: ''\n        })\n    }\n\n    goBackToMentorNetwork() {\n        this.setState({\n            activeItem: MENTOR_NETWORK\n        })\n    }\n\n    handleNewScheduleWithMentor(value) {\n        this.setState({\n            activeItem: NEW_CALL,\n            mentorPicked: true,\n            mentorId: value\n        })\n    }\n\n    viewMentorProfile(value) {\n        this.setState({\n            activeItem: MENTOR_PROFILE,\n            mentorFetchedForView: value,\n        })\n    }\n\n    renderNavSelection() {\n        let school = this.state.data.schoolCustom ? this.state.data.schoolCustom : this.state.data.school ? this.state.data.school.name : 'None listed.'\n        switch(this.state.activeItem) {\n            case MY_PROFILE:\n                return <Profile\n                    trackingId={this.state.data.tracking && this.state.data.tracking.id}\n                    id={this.state.data.id}\n                    email={this.state.data.email}\n                    image={this.state.data.image}\n                    name={this.state.data.name}\n                    school={school}\n                    memberSince={this.state.data.memberSince}\n                    aboutYourself={this.state.data.aboutYourself}\n                    location={this.state.data.location}\n                    isMentor={false}\n                />\n            case MENTOR_NETWORK:\n                return <MentorNetwork\n                    pickMentor={this.handleNewScheduleWithMentor}\n                    viewMentorProfile={this.viewMentorProfile}\n                    />\n            case SCHEDULINGS:\n                return <Schedule\n                    getForm={this.handleNewSchedule}\n                    menteeId={this.state.data.id}\n                    menteeEmail={this.state.data.email}\n                    menteeName={this.state.data.name}\n                />\n            case NEW_CALL:\n                return (this.state.mentorPicked? \n                    <ScheduleFormMentorPicked\n                        mentorId={this.state.mentorId}\n                        menteeId={this.state.data.id}\n                        menteeTimeZone={this.state.data.timeZone}\n                        goBackToMentorNetwork={this.goBackToMentorNetwork}\n                        />:\n                    <ScheduleForm\n                        menteeId={this.state.data.id}\n                        menteeTimeZone={this.state.data.timeZone}\n                    />)\n            case MENTOR_PROFILE:\n                return <Profile\n                    id={this.state.mentorFetchedForView.id}\n                    image={this.state.mentorFetchedForView.image}\n                    name={this.state.mentorFetchedForView.name}\n                    school={this.state.mentorFetchedForView.school}\n                    memberSince={this.state.mentorFetchedForView.memberSince}\n                    aboutYourself={this.state.mentorFetchedForView.aboutYourself}\n                    position={this.state.mentorFetchedForView.position}\n                    major={this.state.mentorFetchedForView.major}\n                    location={this.state.mentorFetchedForView.location}\n                    timeZone={this.state.mentorFetchedForView.timeZone}\n                    languages={this.state.mentorFetchedForView.languages}\n                    viewMode={true}\n                    isMentor={true}\n                    goBackToMentorNetwork={this.goBackToMentorNetwork}\n                />\n            default:\n                return null\n        }\n    }\n\n    render() {\n        const { activeItem } = this.state\n\n        return (\n        <div>\n            <Menu pointing>\n                <Menu.Item name={MY_PROFILE} active={activeItem === MY_PROFILE} onClick={this.handleItemClick} />\n                <Menu.Item\n                    name={MENTOR_NETWORK}\n                    active={activeItem === MENTOR_NETWORK}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={SCHEDULINGS}\n                    active={activeItem === SCHEDULINGS}\n                    onClick={this.handleItemClick}\n                />\n                {/* <Menu.Item\n                    name={MY_APPT}\n                    active={activeItem === MY_APPT}\n                    onClick={this.handleItemClick}\n                /> */}\n                </Menu>\n            <Segment>\n                {this.renderNavSelection()}\n            </Segment>\n        </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Grid, Card, Button, Message, Modal, Form } from 'semantic-ui-react'\nimport { adminCardStyleYellow, adminContentYellowStyle, adminRowPaddingStyle, adminContentOrangeStyle } from \"../../inlineStyles\"\nimport {BACKEND} from \"../../App\";\nimport swal from \"sweetalert\";\nimport ProfileModal from '../MenteeView/ProfileModal'\nimport {buttonStyle3} from '../../inlineStyles';\n\nexport default class MenteeCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: this.props.email,\n            name: this.props.name,\n            modalOpen: false,\n            message: '',\n            suspensionStatus: this.props.suspensionStatus\n        }\n        this.changeSuspensionMentee = this.changeSuspensionMentee.bind(this);\n        this.pingMentee = this.pingMentee.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    pingMentee(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            email: this.state.email,\n            message: this.state.message,\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/pingParticipant`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Message Sent!\",\n                    text: `You just pinged ${this.state.name}.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    changeSuspensionMentee(e){\n        let newStatus = !this.state.suspensionStatus;\n        let payload = {\n            menteeEmail: this.state.email,\n            newSuspensionStatus: newStatus\n        }\n        e.preventDefault();\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/changeMenteeSuspension`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n            }).then(async res => {\n                let resolvedRes = await res;\n                if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                }).then(() => {\n                    \n                });\n                }\n                else {\n                    this.setState({\n                        suspensionStatus: newStatus\n                    }, () => {\n                        swal({\n                            title: \"Suspension status changed!\",\n                            text: `You have changed suspension status of ${this.state.name}.`,\n                            icon: \"success\",\n                            });\n                        })\n                    }\n            }).catch(err => {\n                window.alert(\"Something went wrong, the server's funky!\");\n            });\n    }\n    render() {\n        const {name, school, memberSince, location, callsRequested} = this.props;\n        return (\n            <Card centered={true} style={adminCardStyleYellow}>\n                <Grid columns={2}>\n                    <Grid.Column width={11}>\n                        <Grid.Row style={adminRowPaddingStyle}>\n                            <Message style={adminContentOrangeStyle}>\n                                <strong>{name}</strong> has been a member since {memberSince}, attends <strong>{school}</strong>, and is from <strong>{location}</strong>.\n                            </Message>\n                        </Grid.Row>\n                        <Grid.Row style={adminRowPaddingStyle}>\n                            <Message style={adminContentYellowStyle}>\n                                Calls Requested: {callsRequested}\n                            </Message>\n                        </Grid.Row>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                        <Modal\n                            open={this.state.modalOpen}\n                            trigger={\n                                <Button\n                                    style={buttonStyle3}\n                                    onClick={() => {this.setState({modalOpen: true})}}\n                                >\n                                    Ping Mentee\n                                </Button>\n                            }>\n                            <Modal.Header>Ping {name}</Modal.Header>\n                            <Modal.Content>\n                                <Form onSubmit={this.pingMentee}>\n                                <Form.Field\n                                    type=\"text\">\n                                        <label>Message</label>\n                                        <input placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                                    </Form.Field>\n                                    <Button \n                                        color=\"blue\" \n                                        type='submit'\n                                        disabled={!this.state.message}\n                                    >\n                                        Send\n                                    </Button>\n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => {this.setState({modalOpen: false})}}>\n                                    Done\n                                </Button>\n                            </Modal.Actions>\n                        </Modal> \n                        <Button \n                            style={buttonStyle3}                            \n                            onClick={this.changeSuspensionMentee}>\n                            {this.state.suspensionStatus ? `Unsuspend` : `Suspend`}\n                        </Button>\n                        <Grid.Row>\n                            <ProfileModal menteeId={this.props.menteeId}/>\n                        </Grid.Row>\n                    </Grid.Column>\n                </Grid>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid, Divider, Button } from 'semantic-ui-react'\nimport SearchBar from '../SearchBar';\nimport { BACKEND } from \"../../App\";\nimport MenteeCard from './MenteeCard';\n\nconst compName = 'Mentees_LS';\n\nexport default class Mentees extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mentees: [],\n            searchMode: false,\n            searchTerms: '',\n        }\n        this.updateSearchTerms = this.updateSearchTerms.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getAllMenteesByAdmin`, {\n            method: 'get',\n            credentials: 'include',\n            headers: headers,\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                mentees: resolvedRes && resolvedRes.mentees\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    updateSearchTerms(e, searchObject) {\n        let searchTerms = searchObject.value\n        e.preventDefault();\n        if (!searchTerms) {\n            this.setState({\n                searchMode: false,\n                searchTerms: searchTerms,\n            })\n        } else {\n            this.setState({\n                searchTerms: searchTerms,\n                searchMode: true\n            })\n        }\n    }\n\n    getBagofWords(mentee) {\n        return [mentee.name || '', mentee.school || '', mentee.location || ''];\n    }\n\n    clearSearch(e) {\n        e.preventDefault();\n        this.setState({\n            searchMode: false,\n            searchTerms: '',\n        })\n    }\n\n    filterResults(MenteeObjects) {\n        // eslint-disable-next-line\n        return MenteeObjects.filter(mentee => {\n            let bagOfWords = this.getBagofWords(mentee);\n            let searchTerms = this.state.searchTerms;\n            for (let i = 0; i < bagOfWords.length; i++) {\n                if (bagOfWords[i].toLowerCase().includes(searchTerms.toLowerCase())) {\n                    return true;\n                }\n            }\n        })\n    }\n\n    renderUserCards(MenteeObjects) {\n        return MenteeObjects.map(mentee => {\n            let school = mentee.schoolCustom ? mentee.schoolCustom : mentee.school ? mentee.school.name : 'None listed'\n            return (\n                <MenteeCard\n                    email={mentee.email}\n                    name={mentee.name}\n                    school={school}\n                    memberSince={mentee.memberSince}\n                    location={mentee.location}\n                    callsRequested={mentee.callsRequested}\n                    suspensionStatus={mentee.suspended}\n                    menteeId={mentee.id}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Grid columns={1}>\n                    <Grid.Column width={10}>\n                        There as {this.state.mentees.length} Mentees currently in network.\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <Grid.Row>\n                            <SearchBar\n                                onSearchMode={this.updateSearchTerms}\n                                searchValue={this.state.searchTerms}\n                            />\n                        </Grid.Row>\n                        <Divider/>\n                        <Grid.Row>\n                            <Button onClick={this.clearSearch}>\n                                Clear Search\n                            </Button>\n                        </Grid.Row>\n                    </Grid.Column>\n                </Grid>\n                <Container>\n                    {this.state.searchMode ? \n                    this.renderUserCards(this.filterResults(this.state.mentees)) : this.renderUserCards(this.state.mentees)}\n                </Container>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport { Grid, Card, Button, Message, Modal, Form } from 'semantic-ui-react'\nimport { adminRowPaddingStyle, adminCardStyleYellow, adminContentOrangeStyle, adminContentYellowStyle } from \"../../inlineStyles\"\nimport {BACKEND} from \"../../App\";\nimport swal from \"sweetalert\";\n\nexport default class RequestCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            requestId: this.props.requestId,\n            modalOpen: false,\n            message: ''\n        }\n        this.pingParticipants = this.pingParticipants.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    pingParticipants(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            requestId: this.state.requestId,\n            message: this.state.message\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/pingParticipants`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Message Sent!\",\n                    text: `You just pinged participants for this request.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    render() {\n        const {menteeNameSchool, mentorNameCollege, topic, status, feedback, menteeIntro} = this.props;\n        return (\n            <Card centered={true} style={adminCardStyleYellow}>\n                <Grid columns={2}>\n                    <Grid.Column width={11}>\n                        <Grid.Row style = {adminRowPaddingStyle}>\n                            <Message style={adminContentYellowStyle}>\n                                <strong>{mentorNameCollege}</strong> mentoring <strong>{menteeNameSchool}</strong> about <strong>{topic}</strong>\n                            </Message>\n                        </Grid.Row>\n                        <Grid.Row style = {adminRowPaddingStyle}>\n                            <Message style={adminContentOrangeStyle}>\n                                Status: <strong>{status}</strong>\n                            </Message>\n                        </Grid.Row>\n                        <Grid.Row style = {adminRowPaddingStyle}>\n                            {feedback? \n                            <div>\n                                <Message.Header>\n                                    <strong>Feedback</strong>\n                                </Message.Header>\n                                <Message style={adminContentYellowStyle}>\n                                    \" {feedback} \"\n                                </Message>\n                            </div>\n                             : null}\n                        </Grid.Row>\n                        <Grid.Row style = {adminRowPaddingStyle}>\n                            <div>\n                                <Message.Header>\n                                    <strong>Mentee's Introduction</strong>\n                                </Message.Header>\n                                <Message style={adminContentOrangeStyle}>\n                                    {menteeIntro}\n                                </Message>\n                            </div>\n                        </Grid.Row>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                    <Modal\n                            open={this.state.modalOpen}\n                            trigger={\n                                <Button\n                                    onClick={() => {this.setState({modalOpen: true})}}\n                                >\n                                    Ping Participants\n                                </Button>\n                            }>\n                            <Modal.Header>Ping participants</Modal.Header>\n                            <Modal.Content>\n                                <Form onSubmit={this.pingParticipants}>\n                                <Form.Field\n                                    type=\"text\">\n                                        <label>Message</label>\n                                        <input placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                                    </Form.Field>\n                                    <Button \n                                        color=\"blue\" \n                                        type='submit'\n                                        disabled={!this.state.message}\n                                    >\n                                        Send\n                                    </Button>\n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => {this.setState({modalOpen: false})}}>\n                                    Done\n                                </Button>\n                            </Modal.Actions>\n                        </Modal> \n                    </Grid.Column>\n                </Grid>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\";\nimport RequestCard from './RequestCard';\n\nconst compName = 'Requests_LS';\n\nexport default class Requests extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            requests: [],\n        }\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getAllRequestsByAdmin`, {\n            method: 'get',\n            credentials: 'include',\n            headers: headers,\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                requests: resolvedRes && resolvedRes.requests\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    renderRequestCards(RequestObjects) {\n        return RequestObjects.map(request => {\n            return (\n                <RequestCard\n                    // TODO: add time adjusted for admin\n                    requestId={request.id}\n                    menteeNameSchool={request.menteeNameSchool}\n                    mentorNameCollege={request.mentorNameCollege}\n                    topic={request.topic}\n                    status={request.status}\n                    feedback={request.feedback}\n                    menteeIntro={request.menteeIntro}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Grid>\n                    <Grid.Column width={10}>\n                        There as {this.state.requests.length} Requests logged on the platform.\n                    </Grid.Column>\n                </Grid>\n                <Container>\n                    {this.renderRequestCards(this.state.requests)}\n                </Container>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport { Grid, Card, Button, Modal, Form, Select } from 'semantic-ui-react'\nimport { adminContentOrangeStyle, adminContentYellowStyle } from \"../../inlineStyles\"\nimport {BACKEND} from \"../../App\";\nimport swal from \"sweetalert\";\n\nexport default class SchoolRequestCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            requestId: this.props.requestId,\n            modalOpen: false,\n            mentorPairId: null,\n            mentors: []\n        }\n        this.handleMentorPick = this.handleMentorPick.bind(this);\n    }\n\n    componentDidMount(){\n        if (this.props.topic) {\n            var headers = new Headers();\n            let payload = {\n                topic: this.props.topic\n            }\n            headers.append('Content-Type', 'application/json');\n            headers.append('Accept', 'application/json');\n            fetch(`${BACKEND}/getMentorsByTopic`, {\n                method: 'post',\n                credentials: 'include',\n                headers: headers,\n                body: JSON.stringify(payload)\n            }).then(async res => {\n                let resolvedRes = await res;\n                resolvedRes = await resolvedRes.json()\n                this.setState({\n                    mentors: resolvedRes && resolvedRes.mentors\n                });\n            });\n        }\n    }\n\n    handleMentorPick(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            mentorPairId: value\n        })\n    }\n\n    pairCall() {\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            mentorId: this.state.mentorPairId,\n            menteeId: this.props.menteeId,\n            topic: this.props.topic,\n            schoolName: this.props.schoolName,\n            requestId: this.props.requestId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/newAdminRequest`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Pair request sent!\",\n                    text: `You just requested a call with mentor on behalf of ${this.props.schoolName}.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    render() {\n        const {schoolName, topic, paired, menteeName, mentorName} = this.props;\n        const options = this.state.mentors && this.state.mentors.map(mentor => {\n            return {\n                text: `${mentor.name} (${mentor.college})`,\n                key: mentor.id,\n                value: mentor.id\n            }\n        })\n        return (\n            <Card centered={true} style={paired? adminContentOrangeStyle : adminContentYellowStyle}>\n                <Grid columns={2}>\n                    <Grid.Column width={11}>\n                        {mentorName?\n                            <><strong>{menteeName}({schoolName})</strong> set for a call with <strong>{mentorName}</strong> about <strong>{topic}</strong>.</> :\n                            <><strong>{schoolName}</strong> has requested a call for <strong>{menteeName}</strong> about <strong>{topic}</strong>.</>}\n                        \n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                    {\n                        paired? null :\n                        <Modal\n                            open={this.state.modalOpen}\n                            trigger={\n                                <Button\n                                    onClick={() => {this.setState({modalOpen: true})}}\n                                >\n                                    Find Mentor to pair\n                                </Button>\n                            }>\n                            <Modal.Header>Pair Mentor</Modal.Header>\n                            <Modal.Content>\n                                <Form onSubmit={this.pairCall}>\n                                    <label>Select a mentor for {menteeName}({schoolName}) to consult {topic}</label>\n                                    <Select compact options={options} defaultValue={null} name=\"mentorPairId\" onChange={this.handleMentorPick}/>\n                                    <Button \n                                        color=\"blue\" \n                                        type='submit'\n                                        disabled={!this.state.mentorPairId}\n                                    >\n                                        Pair!\n                                    </Button>                                \n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => {this.setState({modalOpen: false})}}>\n                                    Done\n                                </Button>\n                            </Modal.Actions>\n                        </Modal>\n                    } \n                    </Grid.Column>\n                </Grid>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\";\nimport SchoolRequestCard from './SchoolRequestCard';\n\nconst compName = 'SchoolRequests_LS';\n\nexport default class SchoolRequests extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            moderatorRequests: [],\n        }\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getSchoolGeneratedRequests`, {\n            method: 'get',\n            credentials: 'include',\n            headers: headers,\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                moderatorRequests: resolvedRes && resolvedRes.moderatorRequests\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    renderRequestCards(RequestObjects) {\n        if (!RequestObjects) {\n            return null;\n        }\n        return RequestObjects.map(request => {\n            return (\n                <SchoolRequestCard\n                    // TODO: add time adjusted for admin\n                    requestId={request.id}\n                    schoolName={request.school.name}\n                    menteeId={request.mentee.id}\n                    menteeName={request.mentee.name}\n                    paired={request.paired}\n                    topic={request.topic}\n                    mentorName={request.mentor && request.mentor.name }\n                />\n            )\n        })\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Grid>\n                    <Grid.Column width={10}>\n                        There as {this.state.requests.length} Requests logged on the platform.\n                    </Grid.Column>\n                </Grid>\n                <Container>\n                    {this.renderRequestCards(this.state.moderatorRequests)}\n                </Container>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport { Grid, Card, Button, Message, Modal, Form } from 'semantic-ui-react'\nimport { adminCardStyleYellow, adminContentOrangeStyle, adminRowPaddingStyle } from \"../../inlineStyles\"\nimport {BACKEND} from \"../../App\";\nimport swal from \"sweetalert\";\n\nexport default class MentorCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: this.props.email,\n            name: this.props.name,\n            modalOpen: false,\n            message: ''\n        }\n        this.approveMentor = this.approveMentor.bind(this);\n        this.pingMentor = this.pingMentor.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    pingMentor(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            email: this.state.email,\n            message: this.state.message,\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/pingParticipant`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Message Sent!\",\n                    text: `You just pinged ${this.state.name}.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    approveMentor(e){\n        let payload = {\n            mentorEmail: this.state.email\n        }\n        e.preventDefault();\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/approveMentor`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Mentor approved!\",\n                    text: `You have approved ${this.state.name}.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n               window.alert(\"Something went wrong, the server's funky!\")\n           });\n    }\n    render() {\n        const {name, college, location, memberSince, callsCompleted, approved} = this.props;\n        return (\n            <Card centered={true} style={adminCardStyleYellow}>\n                <Grid columns={2}>\n                    <Grid.Column width={11}>\n                        <Grid.Row style={adminRowPaddingStyle}>\n                            <Message style={adminContentOrangeStyle}>\n                                <strong>{name}</strong> has been a member since {memberSince}, attends <strong>{college}</strong>, and is currently in <strong>{location}</strong>.\n                            </Message>\n                        </Grid.Row>\n                        <Grid.Row style={adminRowPaddingStyle}>\n                            Calls Completed: {callsCompleted}\n                        </Grid.Row>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                        {approved ?\n                        <Modal\n                            open={this.state.modalOpen}\n                            trigger={\n                                <Button\n                                    onClick={() => {this.setState({modalOpen: true})}}\n                                >\n                                    Ping Mentor\n                                </Button>\n                            }>\n                            <Modal.Header>Ping {name}</Modal.Header>\n                            <Modal.Content>\n                                <Form onSubmit={this.pingMentor}>\n                                <Form.Field\n                                    type=\"text\">\n                                        <label>Message</label>\n                                        <input placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                                    </Form.Field>\n                                    <Button \n                                        color=\"blue\" \n                                        type='submit'\n                                        disabled={!this.state.message}\n                                    >\n                                        Send\n                                    </Button>\n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button onClick={() => {this.setState({modalOpen: false})}}>\n                                    Done\n                                </Button>\n                            </Modal.Actions>\n                        </Modal> \n                        :\n                        <Button onClick={this.approveMentor}>\n                            Approve\n                        </Button>}\n                    </Grid.Column>\n                </Grid>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid, Divider, Button } from 'semantic-ui-react'\nimport SearchBar from '../SearchBar';\nimport { BACKEND } from \"../../App\";\nimport MentorCard from './MentorCard';\n\nconst compName = 'Mentors_LS';\n\nexport default class Mentors extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mentors: [],\n            searchMode: false,\n            searchTerms: '',\n        }\n        this.updateSearchTerms = this.updateSearchTerms.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getAllMentorsByAdmin`, {\n            method: 'get',\n            credentials: 'include',\n            headers: headers,\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                mentors: resolvedRes && resolvedRes.mentors\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    updateSearchTerms(e, searchObject) {\n        let searchTerms = searchObject.value\n        e.preventDefault();\n        if (!searchTerms) {\n            this.setState({\n                searchMode: false,\n                searchTerms: searchTerms,\n            })\n        } else {\n            this.setState({\n                searchTerms: searchTerms,\n                searchMode: true\n            })\n        }\n    }\n\n    getBagofWords(mentor) {\n        return [mentor.name || '', mentor.college || '', mentor.location || ''];\n    }\n\n    clearSearch(e) {\n        e.preventDefault();\n        this.setState({\n            searchMode: false,\n            searchTerms: '',\n            searchTopic: '',\n        })\n    }\n\n    filterResults(MentorObjects) {\n        // eslint-disable-next-line\n        return MentorObjects.filter(mentor => {\n            let bagOfWords = this.getBagofWords(mentor);\n            let searchTerms = this.state.searchTerms;\n            for (let i = 0; i < bagOfWords.length; i++) {\n                if (bagOfWords[i].toLowerCase().includes(searchTerms.toLowerCase())) {\n                    return true;\n                }\n            }\n        })\n    }\n\n    renderUserCards(MentorObjects) {\n        return MentorObjects.map(mentor => {\n            return (\n                <MentorCard\n                    name={mentor.name}\n                    college={mentor.college}\n                    location={mentor.location}\n                    memberSince={mentor.memberSince}\n                    callsCompleted={mentor.callsCompleted}\n                    approved={mentor.approved}\n                    email={mentor.email}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Grid columns={1}>\n                    <Grid.Column width={10}>\n                        There as {this.state.mentors.length} Mentors currently in network.\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <Grid.Row>\n                            <SearchBar\n                                onSearchMode={this.updateSearchTerms}\n                                searchValue={this.state.searchTerms}\n                            />\n                        </Grid.Row>\n                        <Divider/>\n                        <Grid.Row>\n                            <Button onClick={this.clearSearch}>\n                                Clear Search\n                            </Button>\n                        </Grid.Row>\n                    </Grid.Column>\n                </Grid>\n                <Container>\n                    {this.state.searchMode ? \n                    this.renderUserCards(this.filterResults(this.state.mentors)) : this.renderUserCards(this.state.mentors)}\n                </Container>\n            </Container>\n        )\n    }\n}\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Button, Modal, Card, Form, Segment } from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\";\nimport swal from \"sweetalert\";\nimport { adminCardStyleYellow } from \"../../inlineStyles\"\n\n\nconst compName = 'Dashboard_LS';\n\nexport default class Dashboard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            schools: [],\n            schoolName: '',\n            schoolRegion: '',\n            schoolContact: '',\n            name: '',\n            passwordTemp: '',\n            modalOpen: false\n        }\n        this.renderUserCards = this.renderUserCards.bind(this)\n        this.addNewSchool = this.addNewSchool.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    addNewSchool(e) {\n        e.preventDefault();\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            schoolName: this.state.schoolName,\n            schoolContact: this.state.schoolContact,\n            schoolRegion: this.state.schoolRegion,\n            adminName: this.state.name,\n            passwordTemp: this.state.passwordTemp\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/addSchool`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Added new school!\",\n                    text: `Added new school for mentees to associate with`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getSchools`, {\n            method: 'get',\n            credentials: 'include',\n            headers: headers,\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                schools: resolvedRes && resolvedRes.schools\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    renderUserCards(SchoolObjects) {\n        if (!SchoolObjects) {\n            return null\n        }\n        return SchoolObjects.map(school => {\n            return (\n                <Card style={adminCardStyleYellow}>\n                    <Card.Header><strong>{school.name}</strong></Card.Header>\n                    <Card.Meta>{school.region}</Card.Meta>\n                    <Card.Meta>Contact: {school.contactEmail}</Card.Meta>\n                </Card>\n            )\n        })\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Segment>\n                    <label>Schools currently in system:</label>\n                    {this.renderUserCards(this.state.schools)}\n                </Segment>\n                <Modal\n                    open={this.state.modalOpen}\n                    trigger={\n                        <Button\n                            onClick={() => {this.setState({modalOpen: true})}}\n                        >\n                            Add School\n                        </Button>\n                    }>\n                    <Modal.Header>Add New School</Modal.Header>\n                    <Modal.Content>\n                        <Form onSubmit={this.addNewSchool}>\n                        <Form.Field\n                            type=\"text\">\n                                <label>School Name</label>\n                                <input placeholder='School name' name=\"schoolName\" onChange={this.handleChange} value={this.state.schoolName} />\n                            </Form.Field>\n                            <Form.Field\n                            type=\"text\">\n                                <label>School Region</label>\n                                <input placeholder='School region' name=\"schoolRegion\" onChange={this.handleChange} value={this.state.schoolRegion} />\n                            </Form.Field>\n                            <Form.Field\n                            type=\"text\">\n                                <label>School Moderator's Email</label>\n                                <input placeholder='Email' name=\"schoolContact\" onChange={this.handleChange} value={this.state.schoolContact} />\n                            </Form.Field>\n                            <Form.Field\n                            type=\"text\">\n                                <label>School Moderator's Temporary Password</label>\n                                <input placeholder='This password is what they will receive in email to use for their first login...' name=\"passwordTemp\" onChange={this.handleChange} value={this.state.passwordTemp} />\n                            </Form.Field>\n                            <Form.Field\n                            type=\"text\">\n                                <label>School Moderator's Name</label>\n                                <input placeholder='Name' name=\"name\" onChange={this.handleChange} value={this.state.name} />\n                            </Form.Field>\n                            <Button \n                                color=\"blue\" \n                                type='submit'\n                                disabled={!this.state.schoolName || !this.state.schoolRegion || !this.state.schoolContact || !this.state.name || !this.state.passwordTemp}\n                            >\n                                Add\n                            </Button>\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => {this.setState({modalOpen: false})}}>\n                            Done\n                        </Button>\n                    </Modal.Actions>\n                </Modal> \n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu, Segment } from 'semantic-ui-react'\nimport Mentees from './Mentees';\nimport Requests from './Requests';\nimport SchoolRequests from './SchoolRequests';\nimport Mentors from './Mentors';\nimport Dashboard from \"./Dashboard\"\n\nconst compName = 'NavBarAdmin_LS';\n\nexport const REQUESTS = 'Requests';\nexport const MENTORS = 'Mentors';\nexport const MENTEES = 'Mentees'\nexport const DASHBOARD = 'Dashboard'\nexport const SCHOOL_REQUESTS = 'School Requests'\n\nexport default class NavBarAdmin extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: REQUESTS,\n            data: {},\n        }\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n            if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState));\n            } catch (e) {\n                console.log(\"Could not get fetch state from local storage for\", compName);\n            }\n        }\n        this.setState({\n            data: this.props.payload.mentee\n        })\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    renderNavSelection() {\n        switch(this.state.activeItem) {\n            case REQUESTS:\n                return <Requests\n                    />\n            case MENTORS:\n                return <Mentors\n                />\n            case MENTEES:\n                return <Mentees\n                />\n            case DASHBOARD:\n                return <Dashboard\n                />\n            case DASHBOARD:\n                return <SchoolRequests\n                />\n            default:\n                return null\n        }\n    }\n\n    render() {\n        const { activeItem } = this.state\n\n        return (\n        <div>\n            <Menu pointing>\n                <Menu.Item\n                    name={REQUESTS}\n                    active={activeItem === REQUESTS}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={MENTORS}\n                    active={activeItem === MENTORS}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={MENTEES}\n                    active={activeItem === MENTEES}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={DASHBOARD}\n                    active={activeItem === DASHBOARD}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={SCHOOL_REQUESTS}\n                    active={activeItem === SCHOOL_REQUESTS}\n                    onClick={this.handleItemClick}\n                />\n                </Menu>\n            <Segment>\n                {this.renderNavSelection()}\n            </Segment>\n        </div>\n        )\n    }\n}\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Button, Modal, Form, Dropdown, Table, Select} from 'semantic-ui-react'\nimport { buttonStyle3 } from \"../../inlineStyles\";\nimport { BACKEND } from \"../../App\";\nimport swal from \"sweetalert\";\nimport {ECA_STRATEGY, ESSAY_CRITIQUE, ESSAY_BRAINSTORM, COLLEGE_SHORTLISTING, FINANCIAL_AID_MATTERS, GENERAL_CONSULTATION} from \"../../topics\";\nimport ProfileModal from \"../MenteeView/ProfileModal\"\n\nconst TOPIC_OPTIONS = [ECA_STRATEGY, ESSAY_CRITIQUE, ESSAY_BRAINSTORM, COLLEGE_SHORTLISTING, FINANCIAL_AID_MATTERS, GENERAL_CONSULTATION];\nlet topicsOptions = TOPIC_OPTIONS.map(val => {\n    return {key: val, text: val, value: val}\n})\n\nconst compName = 'Students_LS';\n/*\n    props: schoolId\n*/\nexport default class Students extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            students: [],\n            message: '',\n            modalMessageOpen: false,\n            modalRequestOpen: false,\n            topicSelectedForMentorship: '',\n            grade: ''\n        }\n        this.pingStudent = this.pingStudent.bind(this);\n        this.requestMentorship = this.requestMentorship.bind(this);\n        this.filterByGrade = this.filterByGrade.bind(this);\n        this.handleTopicSelection = this.handleTopicSelection.bind(this);\n        this.handleChangeGrade = this.handleChangeGrade.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        let payload = {\n            schoolId: this.props.schoolId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        // TODO: endpoint must return all data needed to populate table\n        /*\n        id, name, testsTaken, numCollegesInShortlist, hasEca, callRecord, email\n        */\n        fetch(`${BACKEND}/getAllStudentsBySchool`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify(payload)\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                students: resolvedRes && resolvedRes.students\n            });\n        });\n    }\n\n    handleTopicSelection(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            topicSelectedForMentorship: value,\n        })\n    }\n\n    handleChangeGrade(e, {value}) {\n        e.preventDefault();\n        this.setState({\n            grade: value\n        })\n    }\n\n    pingStudent(email, name) {\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            email,\n            message: this.state.message,\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/pingParticipant`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Message Sent!\",\n                    text: `You just pinged ${name}.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    // TODO: notify school admins of progress of request\n    requestMentorship(studentId) {\n        let payload = {\n            studentId,\n            topic: this.state.topicSelectedForMentorship,\n            schoolId: this.props.schoolId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/makeSchoolRequest`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Request Sent!\",\n                    text: `One of the moderators will pair up the student with one of our mentors soon!.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    renderTableRows(students) {\n        if (students.length) {\n            return students.map( student => {\n                return (\n                    <Table.Row>\n                        <Table.Cell>\n                            {student.name}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {student.testsTaken}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {student.numCollegesInShortlist}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {student.hasEca}\n                        </Table.Cell>\n                        <Table.Cell>\n                            {student.callRecords}\n                        </Table.Cell>\n                        <Table.Cell>\n                            <Modal\n                                open={this.state.modalMessageOpen}\n                                trigger={\n                                    <Button\n                                        style={buttonStyle3}\n                                        onClick={() => {this.setState({modalMessageOpen: true})}}\n                                    >\n                                        Ping Student\n                                    </Button>\n                                }>\n                                <Modal.Header>Ping {student.name}</Modal.Header>\n                                <Modal.Content>\n                                    <Form onSubmit={this.pingStudent(student.email)}>\n                                    <Form.Field\n                                        type=\"text\">\n                                            <label>Message</label>\n                                            <input placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                                        </Form.Field>\n                                        <Button \n                                            color=\"blue\" \n                                            type='submit'\n                                            disabled={!this.state.message}\n                                        >\n                                            Send\n                                        </Button>\n                                    </Form>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => {this.setState({modalMessageOpen: false})}}>\n                                        Done\n                                    </Button>\n                                </Modal.Actions>\n                            </Modal>\n                            <Modal\n                                open={this.state.modalRequestOpen}\n                                trigger={\n                                    <Button\n                                        style={buttonStyle3}\n                                        onClick={() => {this.setState({modalRequestOpen: true})}}\n                                    >\n                                        Request Mentorship\n                                    </Button>\n                                }>\n                                <Modal.Header>Requesting mentorship for {student.name}</Modal.Header>\n                                <Modal.Content>\n                                    <Form onSubmit={this.requestMentorship(student.email)}>\n                                        <Dropdown placeholder='Select a topic for consultation' fluid selection options={topicsOptions} onChange={this.handleTopicSelection} name=\"topicSelectedForMentorship\"/>\n                                        <Button \n                                            color=\"blue\" \n                                            type='submit'\n                                            disabled={!this.state.topicSelectedForMentorship}\n                                        >\n                                            Request\n                                        </Button>\n                                    </Form>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button onClick={() => {this.setState({modalRequestOpen: false})}}>\n                                        Done\n                                    </Button>\n                                </Modal.Actions>\n                            </Modal>\n                                <ProfileModal menteeId={student.id}/>\n                        </Table.Cell>\n                    </Table.Row>\n                )\n            })\n        }\n        return null;\n    }\n\n    filterByGrade(students) {\n        if (!this.state.grade) {\n            return students\n        }\n        return students.map( student => {\n            return student.grade === this.state.grade\n        });\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Select compact options={['8th', '9th', '11th', '12th'].map(grade => {return {key: grade, value: grade, text: grade}})} defaultValue={null} name=\"grade\" onChange={this.handleChangeGrade}/>\n                <Table celled padded>\n                    <Table.Header>\n                        <Table.Row>\n                        <Table.HeaderCell singleLine>Name</Table.HeaderCell>\n                        <Table.HeaderCell singleLine>Tests Taken</Table.HeaderCell>\n                        <Table.HeaderCell singleLine># College in Shortlist</Table.HeaderCell>\n                        <Table.HeaderCell singleLine>Has added ECA</Table.HeaderCell>\n                        <Table.HeaderCell singleLine>Calls Completed/Requested</Table.HeaderCell>\n                        <Table.HeaderCell singleLine>Actions</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.renderTableRows(this.filterByGrade(this.state.students))}\n                    </Table.Body>   \n                </Table>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport { Grid, Card } from 'semantic-ui-react'\nimport { adminContentOrangeStyle, adminContentYellowStyle } from \"../../inlineStyles\"\n\nexport default class SchoolRequestCard extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { topic, menteeName, schoolName, mentorName, paired } = this.props;\n        return (\n            <Card centered={true} style={paired? adminContentOrangeStyle : adminContentYellowStyle}>\n                <Grid columns={1}>\n                    <Grid.Column width={13}>\n                        {mentorName?\n                            <><strong>{menteeName}({schoolName})</strong> set for a call with <strong>{mentorName}</strong> about <strong>{topic}</strong>.</> :\n                            <>You have requested a call for <strong>{menteeName}</strong> about <strong>{topic}</strong>.</>}    \n                    </Grid.Column>\n                </Grid>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\";\nimport SchoolRequestCard from './SchoolRequestCard';\n\nconst compName = 'SchoolRequests_LS';\n\nexport default class SchoolRequests extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            requests: [],\n        }\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        let payload = {\n            schoolId: this.props.schoolId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getModeratorRequestsBySchool`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify(payload)\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                requests: resolvedRes && resolvedRes.requests\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    renderRequestCards(RequestObjects) {\n        return RequestObjects.map(request => {\n            return (\n                <SchoolRequestCard\n                    topic={request.menteeNameSchool}\n                    menteeName={request.mentee.name}\n                    mentorName={request.mentor && request.mentor.name}\n                    paired={request.paired}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Grid>\n                    <Grid.Column width={10}>\n                        You have made {this.state.requests.length} requests via the school portal.\n                    </Grid.Column>\n                </Grid>\n                <Container>\n                    {this.renderRequestCards(this.state.requests)}\n                </Container>\n            </Container>\n        )\n    }\n}\n","import React from 'react'\nimport { Grid, Card, Image } from 'semantic-ui-react'\n\nexport default class MentorSchoolCard extends React.Component {\n    render() {\n        const {name, image, college, position, memberSince, callsCompleted, location} = this.props;\n        const cardStyle ={\n            width: '100%',\n            padding: '5px',\n            margin: '5px',\n        }\n        let imageAspect = {\n            'width': '200px',\n            'height': '150px',\n            'object-fit': 'cover'\n        }\n        return (\n            <Card centered={true} style={cardStyle}>\n                <Grid columns={3}>\n                    <Grid.Column width={4}>\n                        <Image style={imageAspect} src={image} />\n                    </Grid.Column>\n                    <Grid.Column width={12}>\n                        <Card.Content>\n                        <Card.Header>{name} (member since {memberSince}, completed {callsCompleted} calls)</Card.Header>\n                        <Card.Description>\n                            College: {college}\n                        </Card.Description>\n                        <Card.Description>\n                            Position: {position}\n                        </Card.Description>\n                        <Card.Description>\n                            Location: {location}\n                        </Card.Description>\n                        </Card.Content>\n                    </Grid.Column>\n                </Grid>\n            </Card>\n        )\n    }\n    \n}","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Grid, Divider, Button } from 'semantic-ui-react'\nimport SearchBar from '../SearchBar';\nimport { BACKEND } from \"../../App\";\nimport MentorSchoolCard from './MentorSchoolCard';\n\nconst compName = 'Mentors_LS';\n\nexport default class SchoolMentors extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mentors: [],\n            searchMode: false,\n            searchTerms: '',\n        }\n        this.updateSearchTerms = this.updateSearchTerms.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getAllMentorsByAdmin`, {\n            method: 'get',\n            credentials: 'include',\n            headers: headers,\n        }).then(async res => {\n            let resolvedRes = await res;\n            resolvedRes = await resolvedRes.json()\n            this.setState({\n                mentors: resolvedRes && resolvedRes.mentors\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    updateSearchTerms(e, searchObject) {\n        let searchTerms = searchObject.value\n        e.preventDefault();\n        if (!searchTerms) {\n            this.setState({\n                searchMode: false,\n                searchTerms: searchTerms,\n            })\n        } else {\n            this.setState({\n                searchTerms: searchTerms,\n                searchMode: true\n            })\n        }\n    }\n\n    getBagofWords(mentor) {\n        return [mentor.name || '', mentor.college || '', mentor.location || ''];\n    }\n\n    clearSearch(e) {\n        e.preventDefault();\n        this.setState({\n            searchMode: false,\n            searchTerms: '',\n            searchTopic: '',\n        })\n    }\n\n    filterResults(MentorObjects) {\n        // eslint-disable-next-line\n        return MentorObjects.filter(mentor => {\n            let bagOfWords = this.getBagofWords(mentor);\n            let searchTerms = this.state.searchTerms;\n            for (let i = 0; i < bagOfWords.length; i++) {\n                if (bagOfWords[i].toLowerCase().includes(searchTerms.toLowerCase())) {\n                    return true;\n                }\n            }\n        })\n    }\n\n    renderUserCards(MentorObjects) {\n        return MentorObjects.map(mentor => {\n            return (\n                <MentorSchoolCard\n                    name={mentor.name}\n                    college={mentor.college}\n                    location={mentor.location}\n                    memberSince={mentor.memberSince}\n                    callsCompleted={mentor.callsCompleted}\n                    image={mentor.image}\n                    position={mentor.position}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Grid columns={1}>\n                    <Grid.Column width={10}>\n                        There as {this.state.mentors.length} Mentors currently in network.\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <Grid.Row>\n                            <SearchBar\n                                onSearchMode={this.updateSearchTerms}\n                                searchValue={this.state.searchTerms}\n                            />\n                        </Grid.Row>\n                        <Divider/>\n                        <Grid.Row>\n                            <Button onClick={this.clearSearch}>\n                                Clear Search\n                            </Button>\n                        </Grid.Row>\n                    </Grid.Column>\n                </Grid>\n                <Container>\n                    {this.state.searchMode ? \n                    this.renderUserCards(this.filterResults(this.state.mentors)) : this.renderUserCards(this.state.mentors)}\n                </Container>\n            </Container>\n        )\n    }\n}\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { Container, Button, Modal, Form} from 'semantic-ui-react'\nimport { BACKEND } from \"../../App\";\nimport swal from \"sweetalert\";\n\nconst compName = 'SchoolDashboard_LS';\n/*\n    props: schoolId\n*/\nexport default class SchoolDashboard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            modalOpen: false,\n            message: ''\n        }\n        this.pingStudents = this.pingStudents.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        window.addEventListener('beforeunload', this.componentCleanup);\n        // TODO: await on restore before making calls? Do not make calls if state is restored?\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    // TODO: Message students by grade\n    pingStudents(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: false\n        });\n        let payload = {\n            message: this.state.message,\n            schoolId: this.props.schoolId\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/pingStudents`, {\n            method: 'post',\n            headers: headers,\n            credentials: 'include',\n            body: JSON.stringify(payload)\n           }).then(async res => {\n               let resolvedRes = await res;\n               if (resolvedRes.status !== 200) {\n                swal({\n                    title: \"Oops!\",\n                    text: \"Something went wrong... Please try again.\",\n                    icon: \"error\",\n                });\n               }\n               else {\n                swal({\n                    title: \"Message Sent!\",\n                    text: `You messaged all students in your school.`,\n                    icon: \"success\",\n                  });\n               }\n           }).catch(err => {\n            window.alert(\"Something went wrong, the server's funky!\")\n        });\n    }\n\n    render() {\n        return (  \n            <Container>\n                <Modal\n                    open={this.state.modalOpen}\n                    trigger={\n                        <Button\n                            onClick={() => {this.setState({modalOpen: true})}}\n                        >\n                            Ping Students\n                        </Button>\n                    }>\n                    <Modal.Header>Ping Students</Modal.Header>\n                    <Modal.Content>\n                        <Form onSubmit={this.pingStudents}>\n                        <Form.Field\n                            type=\"text\">\n                                <label>Message</label>\n                                <input placeholder='Your message...' name=\"message\" onChange={this.handleChange} value={this.state.message} />\n                            </Form.Field>\n                            <Button \n                                color=\"blue\" \n                                type='submit'\n                                disabled={!this.state.message}\n                            >\n                                Send\n                            </Button>\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={() => {this.setState({modalOpen: false})}}>\n                            Done\n                        </Button>\n                    </Modal.Actions>\n                </Modal>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu, Segment } from 'semantic-ui-react'\nimport Students from './Students';\nimport SchoolRequests from './SchoolRequests';\nimport SchoolMentors from './SchoolMentors';\nimport SchoolDashboard from \"./SchoolDashboard\"\n\nconst compName = 'NavBarSchoolAdmin_LS';\n\nconst REQUESTS = 'Requests';\nconst MENTORS = 'Mentors';\nconst STUDENTS = 'Students'\nconst DASHBOARD = 'Dashboard'\n\nexport default class NavBarSchoolAdmin extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: DASHBOARD,\n            data: {},\n        }\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n            if (persistState) {\n            try {\n                this.setState(JSON.parse(persistState));\n            } catch (e) {\n                console.log(\"Could not get fetch state from local storage for\", compName);\n            }\n        }\n        this.setState({\n            // TODO: change props\n            data: this.props.payload.admin\n        })\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    renderNavSelection() {\n        switch(this.state.activeItem) {\n            case REQUESTS:\n                return <SchoolRequests\n                        schoolId={this.state.data.school.id}\n                    />\n            case MENTORS:\n                return <SchoolMentors\n                />\n            case STUDENTS:\n                return <Students\n                />\n            case DASHBOARD:\n                return <SchoolDashboard\n                />\n            default:\n                return null\n        }\n    }\n\n    render() {\n        const { activeItem } = this.state\n\n        return (\n        <div>\n            <Menu pointing>\n                <Menu.Item\n                    name={REQUESTS}\n                    active={activeItem === REQUESTS}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={MENTORS}\n                    active={activeItem === MENTORS}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={STUDENTS}\n                    active={activeItem === STUDENTS}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name={DASHBOARD}\n                    active={activeItem === DASHBOARD}\n                    onClick={this.handleItemClick}\n                />\n                </Menu>\n            <Segment>\n                {this.renderNavSelection()}\n            </Segment>\n        </div>\n        )\n    }\n}\n","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, Button, Icon, Message, Grid } from 'semantic-ui-react';\nimport { BACKEND } from \"../App\";\nimport { MENTEE, MENTOR, ADMIN, SCHOOL_ADMIN } from '../magicString'\n\nlet fieldStyle = {\n    width: '100%',\n}\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\nlet buttonStyle = {\n    width: '35%',\n}\n\nconst compName = 'LoginForm_LS';\n\nexport default class LoginForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            incorrectCredentials: false,\n            error: null,\n            menteeLoginLoading: false,\n            mentorLoginLoading: false,\n            adminLoading: false,\n            schoolAdminLoading: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmitAsMentee = this.handleSubmitAsMentee.bind(this);\n        this.handleSubmitAsMentor = this.handleSubmitAsMentor.bind(this);\n        this.handleSubmitAsAdmin = this.handleSubmitAsAdmin.bind(this);\n        this.handleSubmitAsSchoolAdmin = this.handleSubmitAsSchoolAdmin.bind(this);\n        this.renderIncorrectCredentialsMessage = this.renderIncorrectCredentialsMessage.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    //TODO: combine both handleSubmit functions into one which takes a bool for isMentor\n    handleSubmitAsMentor(e) {\n        e.preventDefault();\n        this.setState({mentorLoginLoading: true});\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/mentorLogin`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            })\n        }).then(async res => {\n            let resolvedRes = await res;\n            let resolvedResParsed = await resolvedRes.json();\n            if (resolvedRes.status === 400) {\n                this.setState({\n                    incorrectCredentials: true,\n                    error: resolvedResParsed.message ? resolvedResParsed.message : `Your login was unsuccessful.`,\n                    mentorLoginLoading: false,\n                },() => console.log(\"login rejected\", resolvedRes))\n            }\n            else {\n                this.setState({\n                    incorrectCredentials: false,\n                    mentorLoginLoading: false,\n                },() => {\n                    this.props.login()\n                    this.props.liftPayload(resolvedResParsed, MENTOR);\n                })\n            }\n        }).catch(err => {\n            this.setState({\n                mentorLoginLoading: false\n            }, () => {\n                window.alert(\"Whoops! The server's acting up... :(\");\n            })\n        });\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n    }\n\n    componentWillUnmount() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    handleSubmitAsMentee(e) {\n        e.preventDefault();\n        this.setState({menteeLoginLoading: true});\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/menteeLogin`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            })\n        }).then(async res => {\n            let resolvedRes = await res;\n            let resolvedResParsed = await res.json();\n            if (resolvedRes.status === 400) {\n                this.setState({\n                    incorrectCredentials: true,\n                    error: resolvedResParsed.message ? resolvedResParsed.message : `Your login was unsuccessful.`,\n                    menteeLoginLoading: false,\n                },() => console.log(\"login rejected\", resolvedRes))\n            }\n            else {\n                this.setState({\n                    incorrectCredentials: false,\n                    menteeLoginLoading: false,\n                },() => {\n                    this.props.login()\n                    this.props.liftPayload(resolvedResParsed, MENTEE);\n                })\n            }\n        }).catch(err => {\n            this.setState({\n                menteeLoginLoading: false\n            }, () => {\n                window.alert(\"Whoops! The server's acting up... :(\");\n            })\n        });        \n    }\n\n    handleSubmitAsAdmin(e) {\n        e.preventDefault();\n        this.setState({adminLoginLoading: true});\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/adminLogin`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            })\n        }).then(async res => {\n            let resolvedRes = await res;\n            let resolvedResParsed = await resolvedRes.json()\n            if (resolvedRes.status === 400) {\n                this.setState({\n                    incorrectCredentials: true,\n                    error: resolvedResParsed.message ? resolvedResParsed.message : `Your login was unsuccessful.`,\n                    adminLoginLoading: false,\n                },() => console.log(\"login rejected\", resolvedRes))\n            }\n            else {\n                this.setState({\n                    incorrectCredentials: false,\n                    adminLoginLoading: false,\n                },() => {\n                    this.props.login()\n                    this.props.liftPayload(resolvedResParsed, ADMIN);\n                })\n            }\n        }).catch(err => {\n            this.setState({\n                adminLoginLoading: false\n            }, () => {\n                window.alert(\"Whoops! The server's acting up... :(\");\n            })\n        });\n    }\n\n    handleSubmitAsSchoolAdmin(e) {\n        e.preventDefault();\n        this.setState({schoolAdminLoginLoading: true});\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/schoolAdminLogin`, {\n            method: 'post',\n            credentials: 'include',\n            headers: headers,\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            })\n        }).then(async res => {\n            let resolvedRes = await res;\n            let resolvedResParsed = await resolvedRes.json()\n            if (resolvedRes.status === 400) {\n                this.setState({\n                    incorrectCredentials: true,\n                    error: resolvedResParsed.message ? resolvedResParsed.message : `Your login was unsuccessful.`,\n                    schoolAdminLoginLoading: false,\n                },() => console.log(\"login rejected\", resolvedRes))\n            }\n            else {\n                this.setState({\n                    incorrectCredentials: false,\n                    schoolAdminLoginLoading: false,\n                },() => {\n                    this.props.login()\n                    this.props.liftPayload(resolvedResParsed, SCHOOL_ADMIN);\n                })\n            }\n        }).catch(err => {\n            this.setState({\n                schoolAdminLoginLoading: false\n            }, () => {\n                window.alert(\"Whoops! The server's acting up... :(\");\n            })\n        });\n    }\n    \n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    renderIncorrectCredentialsMessage() {\n    let messageStyle = {\n        width: '80%',\n        margin: '10px'\n    }\n    return this.state.incorrectCredentials ?\n    <Grid centered>\n        <Message\n        error\n        content={this.state.error}\n        style = {messageStyle}\n    />\n    </Grid>\n    : null\n    }\n    render() {\n    return (<div>\n        <Message\n            style= {messageStyle}\n            attached\n            centered\n            header=\"We've been there. We'll take you there.\"\n            content='Please sign in.'\n        />\n        {this.renderIncorrectCredentialsMessage()}\n            <Grid>\n            <Grid.Row centered>\n            <Form >\n                <Form.Field\n                type=\"email\"\n                required=\"true\"\n                style={fieldStyle}\n                >\n                    <label>Email</label>\n                    <input placeholder='Email' name=\"email\" onChange={this.handleChange} />\n                </Form.Field>\n                <Form.Field\n                    type=\"password\"\n                    required=\"true\"\n                    style={fieldStyle}\n                >\n                    <label>Password</label>\n                    <input placeholder='***' name=\"password\" type=\"password\" onChange={this.handleChange} />\n                </Form.Field>\n                </Form>\n            </Grid.Row>\n            <Grid.Row centered>\n                <Button.Group>\n                <Button\n                    style={buttonStyle}\n                    onClick={this.handleSubmitAsMentee}\n                    color=\"yellow\" \n                    loading={this.state.menteeLoginLoading}\n                >\n                    <Icon name=\"unlock\"/>\n                    Login as Mentee\n                </Button>\n                <Button \n                    style={buttonStyle}                        \n                    onClick={this.handleSubmitAsMentor}\n                    color=\"orange\"\n                    loading={this.state.mentorLoginLoading}\n                >\n                    <Icon name=\"unlock\"/>\n                    Login as Mentor\n                </Button>\n                <Button \n                    style={buttonStyle}                        \n                    onClick={this.handleSubmitAsAdmin}\n                    color=\"gray\"\n                    loading={this.state.adminLoginLoading}\n                >\n                    <Icon name=\"unlock\"/>\n                    Login as Admin\n                </Button>\n                <Button \n                    style={buttonStyle}\n                    onClick={this.handleSubmitAsSchoolAdmin}\n                    color=\"gray\"\n                    loading={this.state.schoolAdminLoginLoading}\n                >\n                    <Icon name=\"unlock\"/>\n                    Login as School Admin\n                </Button>\n                </Button.Group>\n            </Grid.Row>\n            </Grid>  \n        </div>)\n    }\n}","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, Button, Icon, Message, Grid, Dropdown } from 'semantic-ui-react';\nimport { getTimezoneOffset } from \"./SignUpMentor\"\nimport { BACKEND, PATHS } from \"../../App\"\nimport { Redirect, Link } from \"react-router-dom\"\nimport axios from 'axios';\nimport swal from \"sweetalert\";\n\nconst compName = 'SignUpMentee_LS';\nconst CUSTOM = 'Other... (Not included in list)'\n\nlet fieldStyle = {\n    width: '100%',\n}\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\nexport default class SignUpMentee extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            /*\n            {\n                id: '',\n                name: '',\n                region: '',\n                contact: '',\n            }\n            */\n            schools: [],\n            schoolCustom: '', //custom choice\n            school: '', // from available schools\n            customSchoolSelected: false, // bool to indicate if user selected custom school\n            location: '',\n            aboutYourself: '',\n            // TODO: include stock image if image link is empty, IMAGE LINK is optional\n            imageLink: '',\n            signUpDone: false,\n            submitting: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.uploadImage = this.uploadImage.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n        this.handleSchoolSelection = this.handleSchoolSelection.bind(this);\n    }\n\n    componentCleanup() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n        // TODO: get list of available schools\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        fetch(`${BACKEND}/getSchools`, {\n            method: 'get',\n            headers: headers,\n            credentials: 'include',\n        }).then(async res => {\n                let resolvedRes = await res;\n                resolvedRes = await resolvedRes.json()\n                this.setState({\n                    schools: resolvedRes.schools\n                })\n        }\n        ).catch(e => console.log(e))\n    }\n\n    componentWillUnmount() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    uploadImage(e) {\n        e.preventDefault();\n        let file = e.target.files[0];\n        let data = new FormData();\n        data.append('file', file);\n        axios.post(`${BACKEND}/imageUpload`, data, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n        }).then(\n            success => {\n                console.log(success); // Handle the success response object\n                this.setState({imageLink: success.data})\n            }\n        ).catch(\n            error => console.log(error) // Handle the error response object\n        );\n    }\n\n    handleSchoolSelection(e, {value}) {\n        e.preventDefault();\n        if (value === CUSTOM) {\n            this.setState({\n                customSchoolSelected: true\n            })\n        } else {\n            this.setState({\n                school: value\n            })\n        }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let readyForSubmit = (this.state.name && this.state.email && this.state.password && (this.state.school || this.state.schoolCustom) && \n        this.state.location && this.state.aboutYourself && this.state.confirmPassword) && (this.state.confirmPassword === this.state.password);\n        this.setState({\n            submitting: readyForSubmit,\n        })\n        if (readyForSubmit) {\n            let timeZone = `GMT${getTimezoneOffset()}`;\n            let payload = {\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n                school: this.state.school,\n                schoolCustom: this.state.schoolCustom,\n                customSchoolSelected: this.state.customSchoolSelected,\n                location: this.state.location,\n                timeZone: timeZone,\n                aboutYourself: this.state.aboutYourself,\n                imageLink: this.state.imageLink\n            }\n            e.preventDefault();\n            fetch(`${BACKEND}/newMentee`, {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify(payload)\n            }).then(async res => {\n                let resolvedRes = await res;\n                if (resolvedRes.status === 200) {\n                    swal({\n                        title: \"Congratulations!\",\n                        text: \"Your submission was successful! Please check your email to confirm your account.\",\n                        icon: \"success\",\n                      });\n                    this.setState({\n                        signUpDone: true\n                    })\n                }\n            }).catch(err => {\n                this.setState({\n                    submitting: false\n                }, () => {\n                    window.alert(\"Whoops! The server's acting up... :(\");\n                })\n            });\n        } else {\n            swal({\n                title: \"Yikes!\",\n                text: \"Please fill in all fields to continue. Confirm that passwords match!\",\n                icon: \"error\",\n            });\n        }\n        \n    }\n    render() {\n    let schoolOptions = this.state.schools ? this.state.schools.map(school => {\n        return {\n            key: school.name,\n            value: school.name,\n            text: school.name\n        }\n    }) : null\n    if (schoolOptions) {\n        schoolOptions.push({\n            key: CUSTOM,\n            value: CUSTOM,\n            text: CUSTOM\n        })\n    }\n    return (\n        <div>\n            {\n                this.state.signUpDone? <Redirect to=\"/\" /> :\n                <div>\n                    <Message\n                        style= {messageStyle}\n                        attached\n                        centered\n                        header=\"Mentee Sign up\"\n                        content=\"Welcome! We're excited to have you on board.\"\n                    />\n                        <Grid>\n                        <Grid.Row centered>\n                            <Button>\n                                <Link to={PATHS.root}>\n                                    Back\n                                </Link>\n                            </Button>\n                        </Grid.Row>\n                        <Grid.Row centered>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Field\n                            type=\"email\"\n                            required=\"true\"\n                            style={fieldStyle}\n                            >\n                                <label>Email</label>\n                                <input placeholder='Email' name=\"email\" onChange={this.handleChange} />\n                            </Form.Field>\n                            <Form.Field\n                                type=\"password\"\n                                required=\"true\"\n                                style={fieldStyle}\n                            >\n                                <label>Password</label>\n                                <input placeholder='***' name=\"password\" type=\"password\" onChange={this.handleChange} />\n                            </Form.Field>\n                            <Form.Field\n                                type=\"password\"\n                                required=\"true\"\n                                style={fieldStyle}\n                            >\n                                <label>Confirm Password</label>\n                                <input placeholder='***' name=\"confirmPassword\" type=\"password\" onChange={this.handleChange} />\n                            </Form.Field>\n                            {this.state.password !== this.state.confirmPassword ? \n                            <Message\n                                attached\n                                centered\n                                error\n                                content=\"Your passwords do not match!\"\n                            /> \n                            : null}\n                            <Form.Field\n                                type=\"text\"\n                                required=\"true\"\n                                style={fieldStyle}\n                            >\n                                <label>Name</label>\n                                <input placeholder='Name' name=\"name\" onChange={this.handleChange} />\n                            </Form.Field>\n                            {/* Dropdown with options, if option is other --> free input */}\n                            {!this.state.customSchoolSelected?\n                                 <Form.Field>\n                                 <label>Select your school</label>\n                                 <Dropdown placeholder='Select the school your attend' fluid selection options={schoolOptions} onChange={this.handleSchoolSelection} name=\"school\"/>\n                                </Form.Field>\n                                 : \n                                 <Form.Field\n                                 type=\"text\"\n                                 required=\"true\"\n                                 style={fieldStyle}\n                                >\n                                    <label>Add your School</label>\n                                    <input placeholder='School' name=\"school\" onChange={this.handleChange} />\n                                </Form.Field>\n                            }\n                            <Form.Field\n                                type=\"text\"\n                                required=\"true\"\n                                style={fieldStyle}\n                            >\n                                <label>Location</label>\n                                <input placeholder='Location' name=\"location\" onChange={this.handleChange} />\n                            </Form.Field>\n                            <Form.Field\n                                    type=\"text\"\n                                    required=\"true\"\n                                    style={fieldStyle}\n                                >\n                                    <label>Tell us a little bit about yourself!</label>\n                                    <input placeholder='Interests, Hobbies, Motos...' name=\"aboutYourself\" maxLength = \"500\" onChange={this.handleChange} />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Let's put a face on you! Please upload an image.</label>\n                                    <input type=\"file\" onChange={this.uploadImage} class=\"ui huge yellow center floated button\"/>\n                                </Form.Field>\n                            <Button \n                                color=\"blue\" \n                                type='submit'\n                                loading={this.state.submitting}>\n                                <Icon name=\"unlock\"/>\n                                Submit\n                            </Button>\n                            </Form>\n                        </Grid.Row>\n                        </Grid>    \n                    </div>\n            }\n        </div>\n        )\n    }\n}","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Form, Button, Icon, Message, Grid } from 'semantic-ui-react';\nimport { getTimezoneOffset } from \"./SignUpMentor\"\nimport { BACKEND, PATHS } from \"../../App\"\nimport { Redirect, Link } from \"react-router-dom\"\nimport swal from \"sweetalert\";\n\nconst compName = 'SignUpAdmin_LS';\n\nlet fieldStyle = {\n    width: '100%',\n}\nlet messageStyle = {\n    padding: '20px',\n    margin: '10px',\n}\n\nexport default class SignUpAdmin extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            signUpDone: false,\n            submitting: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.componentCleanup = this.componentCleanup.bind(this);\n    }\n\n    componentCleanup() {\n        this.componentCleanup();\n        window.removeEventListener('beforeunload', this.componentCleanup);\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentCleanup);\n        const persistState = sessionStorage.getItem(compName);\n        if (persistState) {\n          try {\n            this.setState(JSON.parse(persistState));\n          } catch (e) {\n            console.log(\"Could not get fetch state from local storage for\", compName);\n          }\n        }\n    }\n\n    componentWillUnmount() {\n        sessionStorage.setItem(compName, JSON.stringify(this.state));\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        let change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let readyForSubmit = (this.state.name && this.state.email && this.state.password && this.state.confirmPassword) && (this.state.confirmPassword === this.state.password);\n        this.setState({\n            submitting: readyForSubmit,\n        })\n        if (readyForSubmit) {\n            let timeZone = `GMT${getTimezoneOffset()}`;\n            let payload = {\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n                timeZone: timeZone,\n            }\n            e.preventDefault();\n            fetch(`${BACKEND}/newAdmin`, {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify(payload)\n            }).then(res => {\n                swal({\n                    title: \"Congratulations!\",\n                    text: \"Your submission was successful! Please check your email to confirm your account.\",\n                    icon: \"success\",\n                  });\n                this.setState({\n                    signUpDone: true\n                })\n            }).catch(err => {\n                this.setState({\n                    submitting: false\n                }, () => {\n                    window.alert(\"Whoops! The server's acting up... :(\");\n                })\n            });\n        } else {\n            swal({\n                title: \"Yikes!\",\n                text: \"Please fill in all fields to continue. Confirm that passwords match!\",\n                icon: \"error\",\n            });\n        }\n        \n    }\n    render() {\n    return (\n        <div>\n            {\n                this.state.signUpDone? <Redirect to=\"/\" /> :\n                <div>\n                    <Message\n                        style= {messageStyle}\n                        attached\n                        centered\n                        header=\"Admin Sign up\"\n                        content=\"Welcome admin! If you aren't Reshad or Mir, you must be really important!\"\n                    />\n                        <Grid>\n                        <Grid.Row centered>\n                            <Button>\n                                <Link to={PATHS.root}>\n                                    Back\n                                </Link>\n                            </Button>\n                        </Grid.Row>\n                        <Grid.Row centered>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Field\n                            type=\"email\"\n                            required=\"true\"\n                            style={fieldStyle}\n                            >\n                                <label>Email</label>\n                                <input placeholder='Email' name=\"email\" onChange={this.handleChange} />\n                            </Form.Field>\n                            <Form.Field\n                                type=\"password\"\n                                required=\"true\"\n                                style={fieldStyle}\n                            >\n                                <label>Password</label>\n                                <input placeholder='***' name=\"password\" type=\"password\" onChange={this.handleChange} />\n                            </Form.Field>\n                            <Form.Field\n                                type=\"password\"\n                                required=\"true\"\n                                style={fieldStyle}\n                            >\n                                <label>Confirm Password</label>\n                                <input placeholder='***' name=\"confirmPassword\" type=\"password\" onChange={this.handleChange} />\n                            </Form.Field>\n                            {this.state.password !== this.state.confirmPassword ? \n                            <Message\n                                attached\n                                centered\n                                error\n                                content=\"Your passwords do not match!\"\n                            /> \n                            : null}\n                            <Form.Field\n                                type=\"text\"\n                                required=\"true\"\n                                style={fieldStyle}\n                            >\n                                <label>Name</label>\n                                <input placeholder='Name' name=\"name\" onChange={this.handleChange} />\n                            </Form.Field>\n                            <Button \n                                color=\"blue\" \n                                type='submit'\n                                loading={this.state.submitting}>\n                                <Icon name=\"unlock\"/>\n                                Submit\n                            </Button>\n                            </Form>\n                        </Grid.Row>\n                        </Grid>    \n                    </div>\n            }\n        </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport Header from './components/Header';\nimport NavBarMentor from './components/MentorView/NavBarMentor';\nimport NavBarMentee from \"./components/NavBarMentee\";\nimport NavBarAdmin from \"./components/AdminView/NavBarAdmin\";\nimport NavBarSchoolAdmin from \"./components/SchoolView/NavBarSchoolAdmin\";\nimport { Container, Grid, Button, Divider } from 'semantic-ui-react';\nimport LoginForm from \"./components/LoginForm\";\nimport { Route, BrowserRouter as Router, Link, Switch } from 'react-router-dom'\nimport SignUpMentor from './components/SignUp/SignUpMentor';\nimport SignUpMentee from './components/SignUp/SignUpMentee';\nimport SignUpAdmin from './components/SignUp/SignUpAdmin';\nimport { MENTEE, MENTOR, ADMIN, SCHOOL_ADMIN } from './magicString';\n\nexport const BACKEND = process.env.REACT_APP_BACKEND || 'https://one-foot-in-backend.herokuapp.com';\n\nconst compName = 'App_LS';\n\nexport const PATHS = {\n  root: \"/\",\n  signupMentor: \"/signupMentor\",\n  signupMentee: \"/signupMentee\",\n  signupAdmin: \"/signupAdmin\"\n}\n\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      // isMentor: false,\n      role: '',\n      mentorPayload: {},\n      menteePayload: {},\n      adminPayload: {},\n      schoolAdminPayload: {},\n      loggedIn: false,\n    };\n    this.renderLogin = this.renderLogin.bind(this);\n    this.logout = this.logout.bind(this);\n    this.login = this.login.bind(this);\n    this.liftPayload = this.liftPayload.bind(this);\n    this.componentCleanup = this.componentCleanup.bind(this);\n  }\n\n  componentCleanup() {\n    sessionStorage.setItem(compName, JSON.stringify(this.state));\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.componentCleanup);\n    const persistState = sessionStorage.getItem(compName);\n    if (persistState) {\n      try {\n        this.setState(JSON.parse(persistState));\n      } catch (e) {\n        console.log(\"Could not get fetch state from local storage for\", compName);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentCleanup();\n    window.removeEventListener('beforeunload', this.componentCleanup);\n  }\n\n  logout(e){\n    e.preventDefault();\n    this.setState({\n      loggedIn: false\n    })\n  }\n\n  login(){\n    this.setState({\n      loggedIn: true\n    })\n  }\n\n  liftPayload(payload, role) {\n    switch(role) {\n      case (MENTEE):\n          this.setState({\n            role: MENTEE,\n            menteePayload: payload\n          });\n          break;\n      case (MENTOR):\n        this.setState({\n          role: MENTOR,\n          mentorPayload: payload\n        })\n        break;\n      case (ADMIN):\n        this.setState({\n          role: ADMIN,\n          adminPayload: payload\n        })\n        break;\n      case (SCHOOL_ADMIN):\n        this.setState({\n          role: SCHOOL_ADMIN,\n          schoolAdminPayload: payload\n        })\n        break;\n      default:\n        return;\n    }\n  }\n\n  renderLogin() {\n    // TODO: switch-case with 3 views for loggedInView\n    let loggedInView = null;\n    switch(this.state.role)\n    {\n      case(MENTOR):\n        loggedInView = \n          <NavBarMentor\n            payload = {this.state.mentorPayload}\n          />\n          break;\n      case(MENTEE):\n        loggedInView =\n          <NavBarMentee\n            payload = {this.state.menteePayload}\n          />\n        break;\n      case(ADMIN):\n        loggedInView =\n          <NavBarAdmin\n            payload = {this.state.adminPayload}\n            />\n        break;\n      case(SCHOOL_ADMIN):\n        loggedInView =\n          <NavBarSchoolAdmin\n            payload = {this.state.schoolAdminPayload}\n            />\n        break;\n      default:\n        loggedInView = null;\n    }\n    let navigation =\n    <Grid centered>\n      <Router>\n            <div>\n              <Switch>\n                <Route exact path={PATHS.root} render={(props) => \n                  <div>\n                    <div>\n                    <Grid centered rows={1}>\n                      <Grid.Row left>\n                        <Button.Group>\n                        <Button\n                        >\n                          <Link to={PATHS.signupMentor}>\n                            Sign up as Mentor\n                          </Link>\n                        </Button>\n                        <Button\n                        >\n                          <Link to={PATHS.signupMentee}>\n                            Sign up as Mentee\n                          </Link>\n                        </Button>\n                        <Button\n                        >\n                          <Link to={PATHS.signupAdmin}>\n                            Sign up as Admin\n                          </Link>\n                        </Button>\n                        </Button.Group>\n                      </Grid.Row>\n                    </Grid>\n                    </div>\n                    <Divider/>\n                    <LoginForm {...props}\n                      login = {this.login}\n                      liftPayload = {this.liftPayload}\n                    />\n                  </div>\n                }/>\n                <Route exact path={PATHS.signupMentor} render={() => \n                  <SignUpMentor />}/>\n                <Route exact path={PATHS.signupMentee} render={() => \n                  <SignUpMentee /> }/>\n                <Route exact path={PATHS.signupAdmin} render={() => \n                  <SignUpAdmin /> }/>\n              </Switch>\n            </div>\n          </Router>\n    </Grid>\n    return this.state.loggedIn ? loggedInView : navigation;\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          loggedIn={this.state.loggedIn}\n          logout={this.logout}\n          />\n        <Container>{this.renderLogin()}</Container>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n        <App/>\n    , document.getElementById('root')\n);\n"],"sourceRoot":""}